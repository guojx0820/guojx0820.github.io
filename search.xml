<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>敢于重新开始</title>
      <link href="/archives/c144f20a.html"/>
      <url>/archives/c144f20a.html</url>
      
        <content type="html"><![CDATA[<h1 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h1><p>2021，发生太多难以言喻之事，在此记录，仅作怀念。<br>3月迎来考研失败，打击时常都有，但以往每次，我都可以记得自己的珍贵，努力保持自信与对生活的热爱。<br>然而这次的失败，让我开始怀疑自己，怀疑自己的智商，怀疑自己的能力，怀疑自己的一切。这使得我深陷无尽的自卑的深渊之中。<br>就像是从落差感极强的峰顶跌落谷底，摔得粉身碎骨，内心曾以为自己一无是处，消极悲观注入体内，无人可以倾诉。<br>四月份开始调剂，历经坎坷，感恩海大收我，如今倍感珍惜学习机会。<br>暑假家人陪伴，稍有好转，八月来校，我已是海大一份子，青岛四年生活，这座美丽城市时不时给我最大的慰藉。<br>研一生活，感念导师，师姐教导，略有收获，已是极为庆幸。<br>十二月份，与往事断绝，情场失意。看清对方只是不舍我的关怀备至，且未有半点珍惜，遂断绝。找回迷失已久自我，幸得好导师，好师姐，好兄弟，聊以慰藉。<br>敢于将以往放下，开始新生活，珍惜眼前人。蝴蝶之所以美丽，是因为破蛹而出的一瞬，丢弃了曾经禁自己锢的牢笼。成长的一瞬，便应丢弃阻碍成长的枷锁，人生才可得以轻松洒脱。</p><h1 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h1><p>来此学习与之前所学大不相同，但依然是新的开端，敢于开启，不破不立，勇往直前。</p><h1 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h1><p>程序代码可以运行无数遍之后，亦可以重新开始运行，下一次就可能找到问题的关键。<br>搭建博客也是一样，不断重来，不断摸索着前进。<br>不要畏惧重新开始，重新开始不是回到原点，而是重新上升了一个层次，并且有可能跳出了死循环。<br>也许所有死结最好的解决方法，就是重启。</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书与生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Fortran90的Rpstar3大气辐射传输系统源代码文档</title>
      <link href="/archives/8c1f6a98.html"/>
      <url>/archives/8c1f6a98.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文程序在Rstar7与Pstar3的基础上于2020. 3.31 创建，并更新于2020. 8. 7。</p><p>主要开发者：Miho SEKIGUCHI、Yoshifumi Ota和Teruyuki NAKAJIMA<br>贡献者列表如下:</p><p><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/%E5%9F%BA%E4%BA%8EFortran90%E7%9A%84Rpstar3%E8%BE%90%E5%B0%84%E4%BC%A0%E8%BE%93%E6%A8%A1%E5%9E%8B%E6%BA%90%E4%BB%A3%E7%A0%81%E6%96%87%E6%A1%A3/Contributor.png?download=true" alt="R-Pstar系统贡献者"></p></blockquote><h1 id="“R-Pstar3”简介？"><a href="#“R-Pstar3”简介？" class="headerlink" title="“R-Pstar3”简介？"></a>“R-Pstar3”简介？</h1><p>“Pstar3”是用于在大气-陆地&#x2F;海洋耦合系统中模拟极化辐射场的通用软件包。”R-pstar3’是一个类似Rstar的并用于合并和集成Rstar和Pstar的Pstar包。该模拟基于离散纵坐标&#x2F;矩阵算子法在平面平行问题中的应用分为若干均匀层的大气，下伏地面或海洋表面。Pstar3还能够处理辐射传输与平面平行海洋耦合（Ota et al.，2010）。</p><p>最初的Pstar3最初是为观测温室气体而开发的日本国家环境研究所卫星（GOSAT）项目（NIES），由日本JAXA&#x2F;EORC运营。R-Pstar3包通过<a href="http://157.82.240.167/~clastr/">Open CLASTR</a>项目分发。</p><h1 id="软件包程序清单"><a href="#软件包程序清单" class="headerlink" title="软件包程序清单"></a>软件包程序清单</h1><blockquote><ul><li>README: 自述文档。</li></ul></blockquote><blockquote><ul><li>Makefile: 生成可执行文件的配置文件，可以利用此文档一键编译。</li></ul></blockquote><blockquote><ul><li>Mkinclude: Makefile中配置程序中使用的的编译器设置。</li></ul></blockquote><blockquote><ul><li>main.f90: R-pstar3软件包主程序。</li></ul></blockquote><blockquote><ul><li><p>data: R-pstar3输入参数样本文件（默认值：指向data0的符号链接）。</p><blockquote><ul><li>data0: 朗伯表面的非偏振辐射</li><li>data10: 海洋表面的非偏振辐射（海洋层&#x3D;0）</li><li>data1: 海洋表面的非偏振辐射（海洋层&#x3D;2）</li><li>data0p:  朗伯表面的偏振辐射</li><li>data10p: 海洋表面偏振辐射（海洋层&#x3D;0）</li><li>data1p: 海洋表面偏振辐射（海洋层&#x3D;2）</li></ul></blockquote></li></ul></blockquote><blockquote><ul><li><p>out_test: R-pstar3输出文件的示例，文件命名对应于data文件包：data0,10,1,0p,10p,1p–&gt;out0,10,1,0p,10p,1p。</p><p>如果你想得到同样的结果，你应该选择Frohlich和Shaw 1980并在路径LBR&#x2F;pstr4.f90文件中注释掉第528行-第529行（我看到源码中已经注释了）。</p></li></ul></blockquote><blockquote><ul><li><p>这些数据库文件是从ps3r_dbs_200329.tar.gz中提取的。这是一个数据哭的压缩包，需要解压之后将提取的文件放在项目根目录之中。</p><blockquote><ul><li><p>MLATMD: 大气剖面（廓线）文件</p></li><li><p>AERDB: Rstar7的粒子剖面（廓线）文件</p></li><li><p>PKRNL.OUT: Mie散射核心文件（增加Mie散射的角度网格）</p></li><li><p>pyphsf_vis.dat: 六边形固体冰柱数据（近红外和可见光）</p></li><li><p>pyphsf_ir.dat: 六角形固体冰柱数据（红外）</p><p>以上2个文件的字节顺序为little-endian，这些文件与极化辐射不对应。</p></li><li><p>dkrnl&#x2F;PKRNL.OUT_aspXXX: 球体散射数据</p><p>XXX表示宽高比；宽高比&#x3D;X.XX，也就是说如果文件命名为PKRNL.OUT_asp033，那么宽高比就是0.33，这些文件与非极化辐射不对应</p></li></ul></blockquote></li></ul></blockquote><blockquote><ul><li>ckd.g.ch_2_1e3_big: big endian机制的k分布文件</li><li>ckd.g.ch_2_1e3_ltl: little endian机制的k分发文件</li><li>ckd.g.ch_2_2e3_big: big endian机制的精细k分布文件</li><li>ckd.g.ch_2_2e3_ltl: little endian机制的精细k分发文件</li></ul></blockquote><h1 id="源码运行与编译"><a href="#源码运行与编译" class="headerlink" title="源码运行与编译"></a>源码运行与编译</h1><p>a、 请仔细阅读本文件。<br>b、 复制计算机目录中的所有文件并将数据库文件放在同一目录中。<br>c、 选择普通或更细的波数栅格，并复制或链接一个文件到新文件’ckd.g.ch_2’。还应指示正常（1e3）或主程序中DINTVL的更精细（2e3）网格。<br>d、 如果要计算球体粒子，选择一个球体散射数据文件，以备最佳使用并在main7.f90中修改文件名。<br>e、 在Mkinclude中修改编译器设置。用户需要指定Fortran编译器（FC）及其选项（FFLAGS和FMATH）。使用FFLAGS进行编译器优化，和用于链接LAPACK库的FMATH（见下文）。</p><blockquote><p>###关于FMATH###<br>Pstar4需要LAPACK和相关例行程序（<em>1）。要构建Pstar4的可执行文件，编译器选项“FMATH”必须为在Mkinclude中指定，以链接LAPACK库。示例选项<br>对于典型的编译器，可以在Mkinclude中找到。强烈建议用户准备优化的LAPACK库用于他们自己的计算机架构（</em>2），并使用“FMATH”链接它选项，因为Pstar4的计算效率在很大程度上取决于LAPACK库，尤其是在IPOL&#x3D;4的情况下。<br>（<em>1）<a href="http://www.netlib.org/lapack/">LAPACK — Linear Algebra PACKage</a><br>（</em>2）例如英特尔数学内核库或AMD核心数学库。</p><p>注：</p></blockquote><p>f、 在根目录下输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><p>开始编译，生成Makefile中所要求的执行文件，默认为a.out(MacOS or Linux)或者a.exe(Win)。然后找到此执行文件（在Mkinclude文件中可以设置或者修改执行文件的名称，默认为TARGET &#x3D; a.out）。<br>g、 运行执行文件，输入命令：.&#x2F;的意思是执行当前目录下的执行文件+文件名a.out</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./a.out</span><br></pre></td></tr></table></figure><p>回车之后就开始运行执行文件了。会得到一个输出文件out，其中包括计算结果。输出结果out的内容与out0文件的内容相同，如果有差异可能就是四舍五入误差的容许误差，或者计算机的精度差异。代码正常运行，具有自动双精度选项的双精度运行，fortran编译器可以更好地保持准确性，有时会出现输入&#x2F;输出错误，检查在主程序的最开始处打开语句。<br>h、 对于使用R-Pstar3的应用程序，可以更改数据或者输入参数。改变<strong>大气参数和&#x2F;或粒子光学特性</strong>，必须更改<strong>MLATMD和&#x2F;或AERDB</strong>。请参阅后面的一节。<br>当你计算多案例时，首个案例会非常慢，因为代码需要读取大文件PKRNL，所以制造连续计算，无需拆分为多个作业。<br>i、 您可能需要更改应用程序的参数设置，在这种情况下，应该更改主程序中的模块“paras”。</p><h1 id="实验参数文件：数据"><a href="#实验参数文件：数据" class="headerlink" title="实验参数文件：数据"></a>实验参数文件：数据</h1><p>主程序中的读取顺序如下：</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"> read(iui,*, <span class="keyword">iostat</span>=ierr) isol,inda,indg,imthd,ipol,nda,nds</span><br><span class="line">     <span class="keyword">if</span>(ierr/=<span class="number">0</span>) <span class="keyword">exit</span></span><br><span class="line">     read(iui,*) na0, th0(<span class="number">1</span>:na0)</span><br><span class="line">     read(iui,*) na1,th1(<span class="number">1</span>:na1)</span><br><span class="line">     read(iui,*) nfi,fi(<span class="number">1</span>:nfi)</span><br><span class="line">     read(iui,*) nw0</span><br><span class="line">     read(iui,*) rx(<span class="number">1</span>:nw0+<span class="number">1</span>)</span><br><span class="line">     read(iui,*) rf(<span class="number">1</span>:nw0)</span><br><span class="line">     read(iui,*) nw</span><br><span class="line">     read(iui,*) wl(<span class="number">1</span>:nw)</span><br><span class="line">     read(iui,*) dw(<span class="number">1</span>:nw)</span><br><span class="line">     read(iui,*) galb(<span class="number">1</span>:nw)</span><br><span class="line">     read(iui,*) matm,nlna,nlno</span><br><span class="line">     nlna1=nlna+<span class="number">1</span></span><br><span class="line"><span class="comment">! if ipbf&gt;0 then field out</span></span><br><span class="line">     read(iui,*) ipbf(<span class="number">1</span>:nlna1)</span><br><span class="line"><span class="comment">! input CO2 and ground temperature</span></span><br><span class="line">     read(iui,*) gtmp,co2ppm</span><br><span class="line">     read(iui,*) ifrh,trh</span><br><span class="line">     read(iui,*) npoly,icn,wlcn</span><br><span class="line">     <span class="keyword">do</span> i=<span class="number">1</span>,npoly</span><br><span class="line">        read(iui,*) ncomp(i),cnpt(i)</span><br><span class="line">        read(iui,*) mptc(i,<span class="number">1</span>:ncomp(i))</span><br><span class="line">        read(iui,*) vptc(i,<span class="number">1</span>:ncomp(i))</span><br><span class="line">     <span class="keyword">enddo</span></span><br><span class="line">     <span class="keyword">if</span>(nlno &gt; <span class="number">0</span>) <span class="keyword">then</span></span><br><span class="line">        read(iui,*) dptw(<span class="number">1</span>:nlno)</span><br><span class="line">        read(iui,*) chla(<span class="number">1</span>:nlno)</span><br><span class="line">     <span class="keyword">endif</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>重复进行其他实验:</p><p>说明：</p><blockquote><ul><li>ISOL：0为夜间<br>       1为白天</li></ul></blockquote><blockquote><ul><li>INDA：0为仅通量<br>        1为用于通量和辐射计算</li></ul></blockquote><blockquote><ul><li>INDG：0为朗伯表面<br>        1为用于海洋表面<br>        3为适用于平坦的海洋表面</li></ul></blockquote><blockquote><ul><li>IMTHD：选择通量&#x2F;强度计算模式开关。详见<a href="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/%E5%9F%BA%E4%BA%8EFortran90%E7%9A%84Rpstar3%E8%BE%90%E5%B0%84%E4%BC%A0%E8%BE%93%E6%A8%A1%E5%9E%8B%E6%BA%90%E4%BB%A3%E7%A0%81%E6%96%87%E6%A1%A3/MatrixFormulationForTheTransferOfSolarRadiationInAPlane-ParallelScatteringAtmosphere.pdf?download=true">Nakajima和Tanaka（1988）Matrix formulation for the transfer of solar radiation in a plane-parallel scattering atmosphere</a></li></ul></blockquote><blockquote><p>对于非管理员用户，假定IMTHD&#x3D;2。<br>-1: 计算字段时不进行任何更正。<br>0: DM（Delta-M）-方法。适合通量计算。<br>1: MS（多+单）-方法。适用于辐射计算。<br>2: TMS（截断多个+单个）-方法。有利于反射辐射计算。<br>3: IMS（改进的多+单）-方法。适用于传输辐射计算。<br>（该方法不适用于多孔辐射场）<br>在使用相同的正交流值-NDA-的条件下，与NT&#x2F;DM方法相比，MS&#x2F;TMS&#x2F;IMS方法更精确。<br>在除中厚层以外的大多数情况下，TMS比MS更精确。IMS方法是计算太阳周围强度（太阳光环）的最佳方法。<br>对于极各向异性的相函数，如光学厚度较大的云，TMS将是最好的，且收敛速度比MS方法快得多。</p></blockquote><p>以下是选择IMTHD的指导表：</p><p><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/%E5%9F%BA%E4%BA%8EFortran90%E7%9A%84Rpstar3%E8%BE%90%E5%B0%84%E4%BC%A0%E8%BE%93%E6%A8%A1%E5%9E%8B%E6%BA%90%E4%BB%A3%E7%A0%81%E6%96%87%E6%A1%A3/imthd.png?download=true" alt="IMTHD选择"></p><blockquote><ul><li>IPOL：斯托克斯参数的数量<br>1： 用于标量计算（忽略极化效应）<br>4： 用于矢量计算（计算I、Q、U和V）</li></ul></blockquote><p>NDA：半球中高斯正交点的数目，用于积分大气中辐射传输方程的最底角积分。增加该值意味着使用更多计算时间获得更准确的结果（增加NDA*<em>2.5规则）。对计算时间敏感的用户应该通过比较NDA的几个值的结果来调整NDA。<br>对于通量计算，NDA&#x3D;2-4对于大多数应用来说就足够了。<br>对于辐射率计算，NDA&#x3D;6-10对于TM&#x2F;IMS方法中的大多数应用来说已经足够了。<br>NDS：半球中用于积分海洋辐射传输方程纳迪亚尔角积分的高斯正交点的数目。<br>NA0：太阳天顶角数（大于0）。<br>TH0（1:NA0）：太阳天顶角（度）。<br>仅当NA0&gt;0时指定。<br>NA1：出现辐射的天顶角数（大于0）。<br>TH1（1:NA1）：出现辐射的天顶角（度）。<br>透射辐射&lt;90，反射辐射&gt;90。<br>NFI：方位角数。<br>FI（1：NFI）：天顶角（度）。<br>0表示前向散射方向。<br>NW0：用于计算响应函数的亚波长网格数。<br>RX（1：NW0+1）：DW</em>RX&#x3D;微米波长位移<br>对于子小波网格。<br>-0.5&lt;&#x3D;RX&lt;&#x3D;0.5<br>RF（1:NW0）：辐射计组件的综合响应功能<br>RX功能（相对单位正常）。<br>对于单色计算，给出NW0&#x3D;1，RX（1:2）&#x3D;0，RF&#x3D;1。<br>平均辐射率：<br>L&#x3D;总和（I&#x3D;1，N；辐射率（I）*射频（I））&#x2F;总和（I&#x3D;1，N；射频（I））<br>NWL：中心波长数。<br>WL：中心波长（微米）。<br>GALB：INDG&#x3D;0时，Lmabert表面的通量反照率。<br>如果INDG&#x3D;1，则海面以上10 m处的风速（m&#x2F;s）。<br>（如果u10&gt;0.01，可以进行计算。）<br>MATM：大气数（与AFGL lowtran相同<br>（Kneizys等人，1988年））。<br>1： 热带，<br>2： 中纬度夏季，3：中纬度冬季<br>4： 高纬夏季，5：高纬冬季<br>6： 美国标准<br>NLNA：定义大气的子层数。<br>NLNO：定义海洋的子层数。<br>IPBF（1：NLNA+1）：定义要构造的子层的接口号<br>大气。从上到下，即。，<br>必须按照从上到下的顺序给出：<br>IPBF（1）&#x3D;50，IPBF（NLN+1）&#x3D;1<br>如果&gt;0，则计算辐射场<br>如果&lt;0，则无辐射场计算<br>层编号在大气模型中定义<br>MLATMD。</p><h1 id="气体参数文件：MLATMD"><a href="#气体参数文件：MLATMD" class="headerlink" title="气体参数文件：MLATMD"></a>气体参数文件：MLATMD</h1><h1 id="粒子参数文件：AERDB"><a href="#粒子参数文件：AERDB" class="headerlink" title="粒子参数文件：AERDB"></a>粒子参数文件：AERDB</h1><h1 id="分层设计"><a href="#分层设计" class="headerlink" title="分层设计"></a>分层设计</h1><h1 id="主程序结构"><a href="#主程序结构" class="headerlink" title="主程序结构"></a>主程序结构</h1><h1 id="来自R-Pstar3的输出"><a href="#来自R-Pstar3的输出" class="headerlink" title="来自R-Pstar3的输出"></a>来自R-Pstar3的输出</h1><h1 id="调整参数大小"><a href="#调整参数大小" class="headerlink" title="调整参数大小"></a>调整参数大小</h1><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><h1 id="出资人"><a href="#出资人" class="headerlink" title="出资人"></a>出资人</h1>]]></content>
      
      
      <categories>
          
          <category> 程序代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 辐射传输 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>惊人的美</title>
      <link href="/archives/49977e84.html"/>
      <url>/archives/49977e84.html</url>
      
        <content type="html"><![CDATA[<ul><li>世界上最美的东西并非</li><li>由粒子构成。它是那些</li><li>目睹自己世界崩塌的人身上的力量，</li><li>他们挚爱过的一切被碾成千万碎片。</li><li>然而每天早晨，他们醒来重建</li><li>他们的生活，从头再来。哀悼所失</li><li>平静而沉默。我从未见过</li><li>比这更惊人的美。<br>——努尔·乌纳哈 王亚鸽译《昨日我是月亮》</li></ul><p><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/%E6%83%8A%E4%BA%BA%E7%9A%84%E7%BE%8E/%E6%98%A8%E6%97%A5%E6%88%91%E6%98%AF%E6%9C%88%E4%BA%AE.jpeg?download=true" alt="昨日我是月亮"></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗歌 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python数值分析之高斯——勒让德求积公式与复化高斯型求积公式(等距节点)误差分析</title>
      <link href="/archives/a8ccf4cb.html"/>
      <url>/archives/a8ccf4cb.html</url>
      
        <content type="html"><![CDATA[<h1 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h1><p>试建立8个节点的Gauss-Legendre求积公式，要求数值求积公式中的Gauss点以及求积系数都具有8位有效数字；用所建立的Gauss型求积公式计算积分</p><p><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/Python%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90%E4%B9%8B%E9%AB%98%E6%96%AF%E5%8B%92%E8%AE%A9%E5%BE%B7%E6%B1%82%E7%A7%AF%E5%85%AC%E5%BC%8F%E4%B8%8E%E5%A4%8D%E5%8C%96%E9%AB%98%E6%96%AF%E5%9E%8B%E6%B1%82%E7%A7%AF%E5%85%AC%E5%BC%8F%E7%AD%89%E8%B7%9D%E8%8A%82%E7%82%B9/%E7%A7%AF%E5%88%86%E5%85%AC%E5%BC%8F1.png?download=true"></p><p>的近似值，并用四等分区间的复化两点Gauss型求积公式计算该积分的近似值，对二者的精度进行比较，并解释其原因。（提示：用非线性方程迭代解法求得Gauss 点，求积系数根据插值型求积公式的系数计算，具体的积分值可以用数值方法求得)。</p><h1 id="算法原理"><a href="#算法原理" class="headerlink" title="算法原理"></a>算法原理</h1><h2 id="高斯——勒让德求积公式"><a href="#高斯——勒让德求积公式" class="headerlink" title="高斯——勒让德求积公式"></a>高斯——勒让德求积公式</h2><p>插值型求积公式任意给定n + 1个节点，至少有 n 次代数精度。 牛顿-柯特斯公式是等距节点的插值求积公式，当 n 为 偶数时，有n + 1次代数精度。插值求积公式中有n + 1个节点，n + 1个求积系数，共有2n + 2个未知参数，适当选取这些参数可使求积公式具有2n + 1次代数精度，这时就构成了高斯型求积公式。高斯型求积公式就是最高次代数精度的求积公式。高斯公式不局限与等步长分区域，意思是不用二分的方法直接划分区域，在简单的计算下就可以得到高精度的积分式子。插值型求积公式的节点a &lt; x0 &lt; x1 &lt; … &lt; xn &lt; b是高斯点的充分必要条件是以这些节点为零点的多项式。与任何次数不超过n的多项式P（x）带权正交，同时由于其系数都大于0，所以我们也可以得到该求积公式是收敛的。对于勒让德求积公式，就是说我们取权函数P（x）&#x3D;1，同时区间为[-1, 1]，所以勒让德多项式的零点就是我们的求积的高斯点。使插值求积公式有2n+1次代数精度的节点xi,i&#x3D;0,1,…,n称为高斯点，该插值求积公式称为高斯型求积公式，简称高斯公式。高斯点的确定原则上可以根据它们满足的代数精度要求、通过求解非线性方程组得出。对勒让德多项式取其零点作为求积节点，即可构造出高斯-勒让德(Gauss-Legendre)公式，也简称高斯公式。</p><h2 id="复化高斯公式"><a href="#复化高斯公式" class="headerlink" title="复化高斯公式"></a>复化高斯公式</h2><p>将求积区间[a，b]分为 n 等分：n&#x3D;(b-a)&#x2F;h上使用低阶高斯公式(如一阶中矩形公式):<br><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/Python%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90%E4%B9%8B%E9%AB%98%E6%96%AF%E5%8B%92%E8%AE%A9%E5%BE%B7%E6%B1%82%E7%A7%AF%E5%85%AC%E5%BC%8F%E4%B8%8E%E5%A4%8D%E5%8C%96%E9%AB%98%E6%96%AF%E5%9E%8B%E6%B1%82%E7%A7%AF%E5%85%AC%E5%BC%8F%E7%AD%89%E8%B7%9D%E8%8A%82%E7%82%B9/%E5%A4%8D%E5%8C%96%E4%B8%A4%E7%82%B9%E9%AB%98%E6%96%AF%E5%9E%8B%E6%B1%82%E7%A7%AF%E5%85%AC%E5%BC%8F.png?download=true" alt="复化两点高斯型求积公式"><br>高斯公式的值随节点数目的增加而收敛到准确积分值。</p><blockquote><p>优点:</p></blockquote><ul><li><p>收敛、稳定；</p></li><li><p>计算量小，代数精度高。</p></li></ul><blockquote><p> 缺点：</p></blockquote><ul><li><p>高斯点难求（即多项式的根难求）；</p></li><li><p>高斯点是无理数，求积系数也是无理数。</p></li></ul><blockquote><p> 使用情况：</p></blockquote><ul><li><p>f(x) 赋值量大；</p></li><li><p>计算的积分多。</p></li></ul><h1 id="程序框图"><a href="#程序框图" class="headerlink" title="程序框图"></a>程序框图</h1><p><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/Python%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90%E4%B9%8B%E9%AB%98%E6%96%AF%E5%8B%92%E8%AE%A9%E5%BE%B7%E6%B1%82%E7%A7%AF%E5%85%AC%E5%BC%8F%E4%B8%8E%E5%A4%8D%E5%8C%96%E9%AB%98%E6%96%AF%E5%9E%8B%E6%B1%82%E7%A7%AF%E5%85%AC%E5%BC%8F%E7%AD%89%E8%B7%9D%E8%8A%82%E7%82%B9/gausslegendre.png?download=true" alt="高斯——勒让德求积公式"><br><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/Python%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90%E4%B9%8B%E9%AB%98%E6%96%AF%E5%8B%92%E8%AE%A9%E5%BE%B7%E6%B1%82%E7%A7%AF%E5%85%AC%E5%BC%8F%E4%B8%8E%E5%A4%8D%E5%8C%96%E9%AB%98%E6%96%AF%E5%9E%8B%E6%B1%82%E7%A7%AF%E5%85%AC%E5%BC%8F%E7%AD%89%E8%B7%9D%E8%8A%82%E7%82%B9/compositegausspro.png?download=true" alt="复化高斯型求积公式"></p><h1 id="编程实现"><a href="#编程实现" class="headerlink" title="编程实现"></a>编程实现</h1><p>本次编程采用Python的面向对象方法进行编写，其中对算法的初步理解以及求解方程的根的数值方法是本程序的难点所在。<br>利用所编程序，确定并计算题目中所给积分的数值解:<br>以下将用Python进行编程实验，分别利用高斯——勒让德求积公式与复化两点高斯型求积公式对积分要求积分进行求解，最后进行结果分析与讨论。<br>Python代码详解及运行结果如下：</p><h2 id="代码详解："><a href="#代码详解：" class="headerlink" title="代码详解："></a>代码详解：</h2><blockquote><p>gauss_legendre_int.py: 高斯——勒让德求积公式文件。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2022/5/13 4:05 下午</span></span><br><span class="line"><span class="comment"># @Author  : Leo</span></span><br><span class="line"><span class="comment"># @FileName: gauss_legendre_int.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"><span class="comment"># @Blog    ：https://guojxblog.cn</span></span><br><span class="line"><span class="comment"># @GitHub  ：https://github.com/guojx0820</span></span><br><span class="line"><span class="comment"># @Email   ：guojiaxiang0820@gmail.com</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> sympy</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GaussLegendreIntegration</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    高斯——勒让德求积公式，核心部分求解零点与系数</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, int_fun, int_interval, zeros_num=<span class="number">10</span></span>):</span><br><span class="line">        self.int_fun = int_fun  <span class="comment"># 被积函数，符号定义</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(int_interval) == <span class="number">2</span>:</span><br><span class="line">            self.a, self.b = int_interval[<span class="number">0</span>], int_interval[<span class="number">1</span>]  <span class="comment"># 被积区间</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">&quot;积分区间参数设置不规范，应为[a,b].&quot;</span>)</span><br><span class="line">        self.n = <span class="built_in">int</span>(zeros_num)  <span class="comment"># 正交多项式的零点数</span></span><br><span class="line">        self.zeros_points = <span class="literal">None</span>  <span class="comment"># 勒让德高斯零点</span></span><br><span class="line">        self.int_value = <span class="literal">None</span>  <span class="comment"># 积分值结果</span></span><br><span class="line">        self.A_k = <span class="literal">None</span>  <span class="comment"># 求积系数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">cal_int</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        高斯——勒让德求积公式</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        self._cal_Ak_coef_()  <span class="comment"># 求解求积系数Ak与零点</span></span><br><span class="line">        fun_val = self.int_fun(self.zeros_points)  <span class="comment"># 零点函数值</span></span><br><span class="line">        self.int_value = np.dot(self.A_k, fun_val)  <span class="comment"># 插值型求积公式</span></span><br><span class="line">        <span class="keyword">return</span> self.int_value</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_cal_gauss_zeros_points_</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        计算高斯零点</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        t = sympy.Symbol(<span class="string">&#x27;t&#x27;</span>)</span><br><span class="line">        <span class="comment"># 勒让德多项式构造</span></span><br><span class="line">        p_n = (t ** <span class="number">2</span> - <span class="number">1</span>) ** self.n / (math.factorial(self.n) * <span class="number">2</span> ** self.n)</span><br><span class="line">        diff_p_n = sympy.diff(p_n, t, self.n)  <span class="comment"># 多项式的n阶导数</span></span><br><span class="line">        <span class="comment"># print(diff_p_n)</span></span><br><span class="line">        <span class="comment"># 求解高斯——勒让德多项式的全部零点</span></span><br><span class="line">        self.zeros_points = np.asarray(sympy.solve(diff_p_n, t), dtype=np.float_)</span><br><span class="line">        <span class="comment"># print(&quot;高斯点:&quot;, self.zeros_points, sep=&quot;\n&quot;)</span></span><br><span class="line">        <span class="keyword">return</span> diff_p_n, t</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_cal_Ak_coef_</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        计算Ak系数</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        diff_p_n, t = self._cal_gauss_zeros_points_()  <span class="comment"># 求解高斯零点，传递函数和符号参数</span></span><br><span class="line">        Ak_poly = sympy.lambdify(t, <span class="number">2</span> / ((<span class="number">1</span> - t ** <span class="number">2</span>) * (diff_p_n.diff(t, <span class="number">1</span>) ** <span class="number">2</span>)))</span><br><span class="line">        self.A_k = Ak_poly(self.zeros_points)  <span class="comment"># 求解求积系数Ak</span></span><br><span class="line">        <span class="comment"># 区间转换，[a, b] --&gt; [-1, 1]</span></span><br><span class="line">        self.A_k = self.A_k * (self.b - self.a) / <span class="number">2</span></span><br><span class="line">        self.zeros_points = (self.b - self.a) / <span class="number">2</span> * self.zeros_points + (self.a + self.b) / <span class="number">2</span></span><br><span class="line">        <span class="comment"># print(&quot;高斯点:&quot;, self.zeros_points, sep=&quot;\n&quot;)</span></span><br><span class="line">        <span class="comment"># print(&quot;求积系数:&quot;, self.A_k, sep=&quot;\n&quot;)</span></span><br></pre></td></tr></table></figure><blockquote><p>test_gauss_legendre.py: 高斯——勒让德求积公式测试文件。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2022/5/13 4:57 下午</span></span><br><span class="line"><span class="comment"># @Author  : Leo</span></span><br><span class="line"><span class="comment"># @FileName: test_gauss_legendre.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"><span class="comment"># @Blog    ：https://guojxblog.cn</span></span><br><span class="line"><span class="comment"># @GitHub  ：https://github.com/guojx0820</span></span><br><span class="line"><span class="comment"># @Email   ：guojiaxiang0820@gmail.com</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> sympy</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> NumericalIntegration.gauss_legendre_int <span class="keyword">import</span> GaussLegendreIntegration</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fun</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    定义积分的被积函数</span></span><br><span class="line"><span class="string">    :param x:自变量</span></span><br><span class="line"><span class="string">    :return:被积函数</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> np.cos(x) * np.exp(x)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    gauss_zeros_num = np.arange(<span class="number">8</span>, <span class="number">20</span>, <span class="number">1</span>)</span><br><span class="line">    int_accurate = -<span class="number">0.5</span> * (np.exp(np.pi) + <span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;精确值:&quot;</span>, int_accurate)</span><br><span class="line">    precision = []</span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> gauss_zeros_num:</span><br><span class="line">        legendre = GaussLegendreIntegration(fun, [<span class="number">0</span>, np.pi], zeros_num=num)</span><br><span class="line">        int_value = legendre.cal_int()</span><br><span class="line">        precision.append(int_accurate - int_value)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;num:%d,积分值:%.15f,误差:%.15e&quot;</span> % (num, int_value, precision[-<span class="number">1</span>]))  <span class="comment"># append list中最后一个值用precision[-1]</span></span><br><span class="line">    plt.figure(figsize=(<span class="number">8</span>, <span class="number">6</span>))</span><br><span class="line">    plt.title(<span class="string">&quot;Gauss-Legendre Quadrature Formula Error Curve&quot;</span>, fontdict=&#123;<span class="string">&quot;fontsize&quot;</span>: <span class="number">15</span>&#125;)</span><br><span class="line">    plt.xlabel(<span class="string">&quot;The Number of Gauss Zero-Points&quot;</span>, fontdict=&#123;<span class="string">&quot;fontsize&quot;</span>: <span class="number">12</span>&#125;)</span><br><span class="line">    plt.ylabel(<span class="string">&quot;Error&quot;</span>, fontdict=&#123;<span class="string">&quot;fontsize&quot;</span>: <span class="number">12</span>&#125;)</span><br><span class="line">    plt.plot(gauss_zeros_num, precision, <span class="string">&#x27;ro-&#x27;</span>)</span><br><span class="line">    plt.grid(axis=<span class="string">&#x27;y&#x27;</span>, color=<span class="string">&#x27;b&#x27;</span>, linestyle=<span class="string">&#x27;--&#x27;</span>, linewidth=<span class="number">0.5</span>)</span><br><span class="line">    plt.savefig(<span class="string">&quot;/Users/leo/Desktop/Gauss-Legendre.png&quot;</span>, dpi=<span class="number">300</span>, bbox_inches=<span class="string">&quot;tight&quot;</span>)</span><br><span class="line">    plt.show()</span><br><span class="line">    <span class="comment"># legendre._cal_gauss_zeros_points_()</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>composite_2points_gauss_legendre.py:复化两点高斯型求积公式文件。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2022/5/15 5:11 下午</span></span><br><span class="line"><span class="comment"># @Author  : Leo</span></span><br><span class="line"><span class="comment"># @FileName: composite_2points_gauss_legendre.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"><span class="comment"># @Blog    ：https://guojxblog.cn</span></span><br><span class="line"><span class="comment"># @GitHub  ：https://github.com/guojx0820</span></span><br><span class="line"><span class="comment"># @Email   ：guojiaxiang0820@gmail.com</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CompositeGaussLegendreIntegration</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    复化两点高斯——勒让德求积公式，等距节点数自定义</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, int_fun, int_interval, interval_num=<span class="number">4</span></span>):</span><br><span class="line">        self.int_fun = int_fun  <span class="comment"># 被积函数，符号定义</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(int_interval) == <span class="number">2</span>:</span><br><span class="line">            self.a, self.b = int_interval[<span class="number">0</span>], int_interval[<span class="number">1</span>]  <span class="comment"># 被积区间</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">&quot;积分区间参数设置不规范，应为[a, b].&quot;</span>)</span><br><span class="line">        self.interval_num = interval_num</span><br><span class="line">        self.int_value = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">cal_int</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        复化两点高斯——勒让德求积公式</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        fun_value = <span class="number">0</span>  <span class="comment"># 初始化函数值</span></span><br><span class="line">        interval_len = (self.b - self.a) / self.interval_num</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(self.interval_num - <span class="number">1</span>):</span><br><span class="line">            fun_value += self.int_fun(self.a + (k + <span class="number">1</span> / <span class="number">2</span>) * interval_len)</span><br><span class="line">        self.int_value = interval_len * fun_value</span><br><span class="line">        <span class="keyword">return</span> self.int_value</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>test_composite_2points_gauss_legendre.py:复化两点高斯型求积公式测试文件。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2022/5/15 5:56 下午</span></span><br><span class="line"><span class="comment"># @Author  : Leo</span></span><br><span class="line"><span class="comment"># @FileName: test_composite_2points_gauss_legendre.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"><span class="comment"># @Blog    ：https://guojxblog.cn</span></span><br><span class="line"><span class="comment"># @GitHub  ：https://github.com/guojx0820</span></span><br><span class="line"><span class="comment"># @Email   ：guojiaxiang0820@gmail.com</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> symbol</span><br><span class="line"><span class="keyword">from</span> NumericalIntegration.composite_2points_gauss_legendre <span class="keyword">import</span> CompositeGaussLegendreIntegration</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fun</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    定义积分被积函数</span></span><br><span class="line"><span class="string">    :param x: 自由变量</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> np.cos(x) * np.exp(x)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    interval_num = np.arange(<span class="number">100000</span>, <span class="number">1000000</span>, <span class="number">100000</span>)</span><br><span class="line">    int_accurate = -<span class="number">0.5</span> * (np.exp(np.pi) + <span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;精确解:&quot;</span>, int_accurate)</span><br><span class="line">    precision = []</span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> interval_num:</span><br><span class="line">        legendre = CompositeGaussLegendreIntegration(fun, [<span class="number">0</span>, np.pi], interval_num=num)</span><br><span class="line">        int_value = legendre.cal_int()</span><br><span class="line">        precision.append(int_accurate - int_value)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;num=%d,积分值:%.15f,误差:%.15e&quot;</span> % (num, int_value, precision[-<span class="number">1</span>]))  <span class="comment"># append list中最后一个值用precision[-1]</span></span><br><span class="line">    plt.figure(figsize=(<span class="number">8</span>, <span class="number">6</span>))</span><br><span class="line">    plt.title(<span class="string">&quot;Composite Gauss Quadrature Formula Error Curve&quot;</span>, fontdict=&#123;<span class="string">&quot;fontsize&quot;</span>: <span class="number">16</span>&#125;)</span><br><span class="line">    plt.xlabel(<span class="string">&quot;The Number of Integral Intervals&quot;</span>, fontdict=&#123;<span class="string">&quot;fontsize&quot;</span>: <span class="number">12</span>&#125;)</span><br><span class="line">    plt.ylabel(<span class="string">&quot;Error&quot;</span>, fontdict=&#123;<span class="string">&quot;fontsize&quot;</span>: <span class="number">12</span>&#125;)</span><br><span class="line">    plt.plot(interval_num, precision, <span class="string">&#x27;ro-&#x27;</span>)</span><br><span class="line">    plt.grid(axis=<span class="string">&#x27;y&#x27;</span>, color=<span class="string">&#x27;b&#x27;</span>, linestyle=<span class="string">&#x27;--&#x27;</span>, linewidth=<span class="number">0.5</span>)</span><br><span class="line">    plt.savefig(<span class="string">&quot;/Users/leo/Desktop/CompositeGauss.png&quot;</span>, dpi=<span class="number">300</span>, bbox_inches=<span class="string">&quot;tight&quot;</span>)</span><br><span class="line">    plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><p><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/Python%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90%E4%B9%8B%E9%AB%98%E6%96%AF%E5%8B%92%E8%AE%A9%E5%BE%B7%E6%B1%82%E7%A7%AF%E5%85%AC%E5%BC%8F%E4%B8%8E%E5%A4%8D%E5%8C%96%E9%AB%98%E6%96%AF%E5%9E%8B%E6%B1%82%E7%A7%AF%E5%85%AC%E5%BC%8F%E7%AD%89%E8%B7%9D%E8%8A%82%E7%82%B9/%E9%AB%98%E6%96%AF%E7%82%B9.png?download=true" alt="高斯——勒让德求积公式高斯点计算结果"></p><p><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/Python%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90%E4%B9%8B%E9%AB%98%E6%96%AF%E5%8B%92%E8%AE%A9%E5%BE%B7%E6%B1%82%E7%A7%AF%E5%85%AC%E5%BC%8F%E4%B8%8E%E5%A4%8D%E5%8C%96%E9%AB%98%E6%96%AF%E5%9E%8B%E6%B1%82%E7%A7%AF%E5%85%AC%E5%BC%8F%E7%AD%89%E8%B7%9D%E8%8A%82%E7%82%B9/%E6%B1%82%E7%A7%AF%E7%B3%BB%E6%95%B0.png?download=true" alt="高斯——勒让德求积公式求积系数计算结果"></p><p><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/Python%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90%E4%B9%8B%E9%AB%98%E6%96%AF%E5%8B%92%E8%AE%A9%E5%BE%B7%E6%B1%82%E7%A7%AF%E5%85%AC%E5%BC%8F%E4%B8%8E%E5%A4%8D%E5%8C%96%E9%AB%98%E6%96%AF%E5%9E%8B%E6%B1%82%E7%A7%AF%E5%85%AC%E5%BC%8F%E7%AD%89%E8%B7%9D%E8%8A%82%E7%82%B9/%E6%95%B0%E5%80%BC%E8%A7%A3%E5%8F%8A%E8%AF%AF%E5%B7%AE.png?download=true" alt="高斯——勒让德求积公式精确值与数值解及误差"></p><p><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/Python%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90%E4%B9%8B%E9%AB%98%E6%96%AF%E5%8B%92%E8%AE%A9%E5%BE%B7%E6%B1%82%E7%A7%AF%E5%85%AC%E5%BC%8F%E4%B8%8E%E5%A4%8D%E5%8C%96%E9%AB%98%E6%96%AF%E5%9E%8B%E6%B1%82%E7%A7%AF%E5%85%AC%E5%BC%8F%E7%AD%89%E8%B7%9D%E8%8A%82%E7%82%B9/Gauss-Legendre.png?download=true" alt="高斯——勒让德求积公式误差曲线"></p><p><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/Python%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90%E4%B9%8B%E9%AB%98%E6%96%AF%E5%8B%92%E8%AE%A9%E5%BE%B7%E6%B1%82%E7%A7%AF%E5%85%AC%E5%BC%8F%E4%B8%8E%E5%A4%8D%E5%8C%96%E9%AB%98%E6%96%AF%E5%9E%8B%E6%B1%82%E7%A7%AF%E5%85%AC%E5%BC%8F%E7%AD%89%E8%B7%9D%E8%8A%82%E7%82%B9/%E6%95%B0%E5%80%BC%E8%A7%A3%E5%8F%8A%E8%AF%AF%E5%B7%AE1.png?download=true" alt="复化两点高斯求积公式精确值与数值解及误差"></p><p><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/Python%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90%E4%B9%8B%E9%AB%98%E6%96%AF%E5%8B%92%E8%AE%A9%E5%BE%B7%E6%B1%82%E7%A7%AF%E5%85%AC%E5%BC%8F%E4%B8%8E%E5%A4%8D%E5%8C%96%E9%AB%98%E6%96%AF%E5%9E%8B%E6%B1%82%E7%A7%AF%E5%85%AC%E5%BC%8F%E7%AD%89%E8%B7%9D%E8%8A%82%E7%82%B9/CompositeGauss.png?download=true" alt="复化高斯型求积公式误差曲线"></p><h1 id="结果分析与讨论"><a href="#结果分析与讨论" class="headerlink" title="结果分析与讨论"></a>结果分析与讨论</h1><ul><li><p>有两种求积公式的结果可以看出，高斯——勒让德求积公式计算较为复杂，但收敛速度快且精度较高，在20个高斯零点以内可以收敛，且误差缩小到1e-14的个数量级；而复化两点高斯型积分公式收敛速度较慢，需要将区间分为1e6个小区间之后，精度只能达到1e-6个数量级，继续增加其区间，缩小步长时，程序运行速度明显变慢，说明其效率低于高斯——勒让德求积公式（由于n&#x3D;4，四等分区间时，其结果差异很大，所以舍弃，只能用百万区间划分才能确保精度）。</p></li><li><p>高斯——勒让德求积公式精度高，收敛速度快的主要原因是：高斯——勒让德求积公式的高斯节点的选取的特殊性，并不采用等距节点，而是利用勒让德多项式的插值节点作为高斯点进行积分，其结果更加精确，且收敛速度更快，也更加容易接近精确解。</p></li><li><p>反观等距节点插值，对于高次具有强震荡曲线的函数，效果并不理想。主要是由于函数在小区间内的变化率太大，所引起的误差较大，因此需要不断增加其等距节点个数，缩小步长或区间范围，在小区间中用高斯型求积公式进行积分求解才更有效果。</p></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><strong>[1]《数值分析》欧阳洁等。</strong></p><p><strong>[2]</strong> <a href="https://www.bilibili.com/video/BV1Lq4y1U7Hj?p=29&amp;spm_id_from=pageDriver">https://www.bilibili.com/video/BV1Lq4y1U7Hj?p=29&amp;spm_id_from=pageDriver</a></p><p><strong>[3]</strong> <a href="https://wenku.baidu.com/view/b3fc62d74b7302768e9951e79b89680203d86bb7.html">https://wenku.baidu.com/view/b3fc62d74b7302768e9951e79b89680203d86bb7.html</a></p><p><strong>[4]</strong> <a href="https://blog.csdn.net/poqw2010/article/details/79487919">https://blog.csdn.net/poqw2010/article/details/79487919</a></p><p><strong>[5]</strong> <a href="https://blog.csdn.net/catinlbb/article/details/103534439">https://blog.csdn.net/catinlbb/article/details/103534439</a></p><p><strong>[6]</strong> <a href="https://www.doc88.com/p-3901680450501.html">https://www.doc88.com/p-3901680450501.html</a></p><p><strong>[7]</strong> <a href="https://zhuanlan.zhihu.com/p/439768015">https://zhuanlan.zhihu.com/p/439768015</a></p>]]></content>
      
      
      <categories>
          
          <category> 程序代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python数值分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python数字图像处理基础之OpenCV图像读取与显示</title>
      <link href="/archives/8063fed6.html"/>
      <url>/archives/8063fed6.html</url>
      
        <content type="html"><![CDATA[<h2 id="OpenCV简介"><a href="#OpenCV简介" class="headerlink" title="OpenCV简介"></a>OpenCV简介</h2><p>OpenCV是一个强大的图像处理的函数库，里面包含了数种经典函数，用于数字图像处理程序的调用。</p><h2 id="数字图像处理"><a href="#数字图像处理" class="headerlink" title="数字图像处理"></a>数字图像处理</h2><p>将图像数字化称为数字图像，将数字图像进行转化成多维数组，进行数学上的统计与计算，用以提高图像质量以便增加人眼的识别效果的方法成为数字图像处理。其中Python数字图像处理非常流行，如今已经有机器学习，卷积神经网络，深度学习等算法在计算机视觉，遥感与摄影测量等领域应用。</p><h2 id="代码详解"><a href="#代码详解" class="headerlink" title="代码详解"></a>代码详解</h2><blockquote><p>方法一：</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="comment"># import numpy as np</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">在读取真彩色RGB三波段图像时，需要用到openCV开源库中的函数，较为方便，但也可以自己写函数处理，openCV是专门用于图像处理的开源库，</span></span><br><span class="line"><span class="string">应用较为方便简单所以本程序应用到了其split函数，就是为了分出图像的三个通道。</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># Step 1：读取图像并显示保存</span></span><br><span class="line"><span class="comment"># 读取图像，应用openCV的imread函数</span></span><br><span class="line">img = cv2.imread(<span class="string">&quot;Typhoon Chanthu image09182021_500m.jpeg&quot;</span>)</span><br><span class="line"><span class="comment"># 显示图像，应用openCV的imshow函数</span></span><br><span class="line">cv2.imshow(<span class="string">&quot;Color&quot;</span>, img)</span><br><span class="line"><span class="comment"># 利用openCV的split函数将彩色图像的R、G、B三个波段的灰度图分开，并将其值赋给b,g,r</span></span><br><span class="line"><span class="comment"># 在此需要注意的是，第n波段是图像的第3维信息，在python中顺序是从0开始的，所以波段对应为0对应b（蓝波段），</span></span><br><span class="line"><span class="comment"># 1对应g（绿波段），2对应r（红波段）</span></span><br><span class="line">b, g, r = cv2.split(img)</span><br><span class="line"><span class="comment"># 分别显示三个波段的图像，显示框标题分别设为：&quot;Blue 1&quot;，&quot;Green 1&quot;，&quot;Red 1&quot;</span></span><br><span class="line">cv2.imshow(<span class="string">&quot;Blue&quot;</span>, b)</span><br><span class="line">cv2.imshow(<span class="string">&quot;Green&quot;</span>, g)</span><br><span class="line">cv2.imshow(<span class="string">&quot;Red&quot;</span>, r)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分别将图像的三个波段写出</span></span><br><span class="line">cv2.imwrite(<span class="string">&quot;typtoon_r.jpg&quot;</span>, r)</span><br><span class="line">cv2.imwrite(<span class="string">&quot;typtoon_g.jpg&quot;</span>, g)</span><br><span class="line">cv2.imwrite(<span class="string">&quot;typtoon_b.jpg&quot;</span>, b)</span><br><span class="line"><span class="comment"># 这里出现了error，如果需要显示图像窗口时，如imshow图像的时候，需要加上cv2.waitKay()函数，控制着imshow的持续时间</span></span><br><span class="line"><span class="comment"># 其中waitKay()函数中的参数值代表弛豫时间，0和不填代表无限制时间，也就是说，图像显示窗口无限制时间显示。若是其他数字，</span></span><br><span class="line"><span class="comment"># 则是以毫秒为计数单位，写多少就代表图像显示多少毫秒。需要注意的是，窗口显示图像时，按任意键会结束显示。</span></span><br><span class="line">cv2.waitKey(<span class="number">1</span>)</span><br><span class="line"><span class="comment"># cv2.destroyAllWindows() 用来删除窗口的，（）里不指定任何参数，则删除所有窗口，删除特定的窗口，往（）输入特定的窗口值。</span></span><br><span class="line">cv2.destroyAllWindows()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 2 读取各个波段的像素值</span></span><br><span class="line"><span class="comment"># 首先打印图像的信息</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;图像形状大小：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img.shape)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;图像像素数目：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img.size)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;图像数据类型：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img.dtype)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印像素点（左上角）(0,0)的各个通道值，在此item()函数则是字典函数，遍历图像找到图像中的像素值</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(0,0)的R通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img.item(<span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(0,0)的G通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img.item(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(0,0)的B通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img.item(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印像素点(838, 757)的各个通道值</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(838,757)的R通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img.item(<span class="number">838</span>, <span class="number">757</span>, <span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(838,757)的G通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img.item(<span class="number">838</span>, <span class="number">757</span>, <span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(838,757)的B通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img.item(<span class="number">838</span>, <span class="number">757</span>, <span class="number">0</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印像素点(726, 1287)的各个通道值</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(726,1287)的R通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img.item(<span class="number">726</span>, <span class="number">1287</span>, <span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(726,1287)的G通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img.item(<span class="number">726</span>, <span class="number">1287</span>, <span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(726,1287)的B通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img.item(<span class="number">726</span>, <span class="number">1287</span>, <span class="number">0</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印像素点(2096, 1870)的各个通道值</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(2096,1870)的R通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img.item(<span class="number">2096</span>, <span class="number">1870</span>, <span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(2096,1870)的G通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img.item(<span class="number">2096</span>, <span class="number">1870</span>, <span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(2096,1870)的B通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img.item(<span class="number">2096</span>, <span class="number">1870</span>, <span class="number">0</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印像素点(2168, 2014)的各个通道值</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(2168,2014)的R通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img.item(<span class="number">2168</span>, <span class="number">2014</span>, <span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(2168,2014)的G通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img.item(<span class="number">2168</span>, <span class="number">2014</span>, <span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(2168,2014)的B通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img.item(<span class="number">2168</span>, <span class="number">2014</span>, <span class="number">0</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>方法二：</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="comment"># from PIL import Image</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">在提取图像中的像素值时，首先需要将图像转化为数组，对数组进行提取，因此需要用到numpy库。</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># Step 1：读取图像，并显示和储存</span></span><br><span class="line">img = cv2.imread(<span class="string">&quot;Typhoon Chanthu image09182021_500m.jpeg&quot;</span>)</span><br><span class="line">cv2.imshow(<span class="string">&quot;Color 2&quot;</span>, img)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># cv2.imshow(&quot;img&quot;,img)</span></span><br><span class="line"><span class="comment"># b, g, r = cv2.split(img)</span></span><br><span class="line"><span class="comment"># cv2.imshow(&quot;Blue 1&quot;, b)</span></span><br><span class="line"><span class="comment"># cv2.imshow(&quot;Green 1&quot;, g)</span></span><br><span class="line"><span class="comment"># cv2.imshow(&quot;Red 1&quot;, r)</span></span><br><span class="line"><span class="comment"># cv2.waitKey()</span></span><br><span class="line"><span class="comment"># cv2.destroyAllWindows()</span></span><br><span class="line"><span class="comment"># 此处没有用openCV中的split函数进行RGB图的拆分，而是定义了三个拆分函数，其效果与split函数一致。</span></span><br><span class="line"><span class="comment"># 第一函数get_red(),输入参数为三波段RGB图像，其中2，1，0分别对应蓝，绿，红三个波段</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_red</span>(<span class="params">img</span>):</span><br><span class="line">    redImg = img[:, :, <span class="number">2</span>]</span><br><span class="line">    <span class="keyword">return</span> redImg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_green</span>(<span class="params">img</span>):</span><br><span class="line">    greenImg = img[:, :, <span class="number">1</span>]</span><br><span class="line">    <span class="keyword">return</span> greenImg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_blue</span>(<span class="params">img</span>):</span><br><span class="line">    blueImg = img[:, :, <span class="number">0</span>]</span><br><span class="line">    <span class="keyword">return</span> blueImg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 应用上述定义函数进行波段赋值</span></span><br><span class="line">b = get_blue(img)</span><br><span class="line">g = get_green(img)</span><br><span class="line">r = get_red(img)</span><br><span class="line"><span class="comment"># 再将三个波段用窗口展示</span></span><br><span class="line">cv2.imshow(<span class="string">&quot;Blue 2&quot;</span>, b)</span><br><span class="line">cv2.imshow(<span class="string">&quot;Green 2&quot;</span>, g)</span><br><span class="line">cv2.imshow(<span class="string">&quot;Red 2&quot;</span>, r)</span><br><span class="line"><span class="comment"># 分别将图像的三个波段写出</span></span><br><span class="line">cv2.imwrite(<span class="string">&quot;typtoon2_r.jpg&quot;</span>, r)</span><br><span class="line">cv2.imwrite(<span class="string">&quot;typtoon2_g.jpg&quot;</span>, g)</span><br><span class="line">cv2.imwrite(<span class="string">&quot;typtoon2_b.jpg&quot;</span>, b)</span><br><span class="line"><span class="comment"># 定义弛豫时间，按任意键结束</span></span><br><span class="line">cv2.waitKey()</span><br><span class="line"><span class="comment"># 关闭窗口</span></span><br><span class="line">cv2.destroyAllWindows()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Step 2：获取图像的像素值</span></span><br><span class="line"><span class="comment"># 首先打印图像的信息</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;图像形状大小：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img.shape)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;图像像素数目：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img.size)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;图像数据类型：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img.dtype)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 此为第二种获取图像像素值的方法，需要将图像先转化为三维数组np.array(),然后输出数组对应的值来获取图像的像素值</span></span><br><span class="line"><span class="comment"># 将图像转化为数组</span></span><br><span class="line">img_array = np.array(img)</span><br><span class="line"><span class="comment"># 利用数组的位置（三维坐标）来获取所需的像素值</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印像素点（左上角）(0,0)的各个通道值</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(0,0)的R通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img_array[<span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(0,0)的G通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img_array[<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(0,0)的B通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img_array[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印像素点(838, 757)的各个通道值</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(838,757)的R通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img_array[<span class="number">838</span>, <span class="number">757</span>, <span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(838,757)的G通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img_array[<span class="number">838</span>, <span class="number">757</span>, <span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(838,757)的B通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img_array[<span class="number">838</span>, <span class="number">757</span>, <span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印像素点(726, 1287)的各个通道值</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(726,1287)的R通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img_array[<span class="number">726</span>, <span class="number">1287</span>, <span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(726,1287)的G通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img_array[<span class="number">726</span>, <span class="number">1287</span>, <span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(726,1287)的B通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img_array[<span class="number">726</span>, <span class="number">1287</span>, <span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印像素点(2096, 1870)的各个通道值</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(2096,1870)的R通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img_array[<span class="number">2096</span>, <span class="number">1870</span>, <span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(2096,1870)的G通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img_array[<span class="number">2096</span>, <span class="number">1870</span>, <span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(2096,1870)的B通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img_array[<span class="number">2096</span>, <span class="number">1870</span>, <span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印像素点(2168, 2014)的各个通道值</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(2168,2014)的R通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img_array[<span class="number">2168</span>, <span class="number">2014</span>, <span class="number">2</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(2168,2014)的G通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img_array[<span class="number">2168</span>, <span class="number">2014</span>, <span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;像素点(2168,2014)的B通道值为：&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(img_array[<span class="number">2168</span>, <span class="number">2014</span>, <span class="number">0</span>])</span><br></pre></td></tr></table></figure><h2 id="结果展示"><a href="#结果展示" class="headerlink" title="结果展示"></a>结果展示</h2><blockquote><p>（1）RGB真彩色影像</p></blockquote><p><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/Python%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80%E4%B9%8BOpenCV%E5%9B%BE%E5%83%8F%E8%AF%BB%E5%8F%96%E4%B8%8E%E6%98%BE%E7%A4%BA/TyphoonChanthuimage09182021_500m.jpeg?download=true" alt="RGB真彩色影像"></p><blockquote><p>（2）红色通道R</p></blockquote><p><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/Python%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80%E4%B9%8BOpenCV%E5%9B%BE%E5%83%8F%E8%AF%BB%E5%8F%96%E4%B8%8E%E6%98%BE%E7%A4%BA/R.png?download=true" alt="红色通道R"></p><blockquote><p>（3）绿色通道G</p></blockquote><p><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/Python%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80%E4%B9%8BOpenCV%E5%9B%BE%E5%83%8F%E8%AF%BB%E5%8F%96%E4%B8%8E%E6%98%BE%E7%A4%BA/G.png?download=true" alt="绿色通道G"></p><blockquote><p>（4）蓝色通道B</p></blockquote><p><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/Python%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E5%9F%BA%E7%A1%80%E4%B9%8BOpenCV%E5%9B%BE%E5%83%8F%E8%AF%BB%E5%8F%96%E4%B8%8E%E6%98%BE%E7%A4%BA/B.png?download=true" alt="蓝色通道B"></p><blockquote><p>代码与结果详见：</p></blockquote><p><a href="https://github.com/guojx0820/OpenCVImgReadAndShow"><img src="https://github-readme-stats.vercel.app/api/pin/?username=guojx0820&repo=OpenCVImgReadAndShow&theme=radical" alt="OpenCVImgReadAndShow"></a></p>]]></content>
      
      
      <categories>
          
          <category> 程序代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python数字图像处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>肖申克的救赎——经久不衰的经典之作</title>
      <link href="/archives/a1db3116.html"/>
      <url>/archives/a1db3116.html</url>
      
        <content type="html"><![CDATA[<h2 id="情节概述"><a href="#情节概述" class="headerlink" title="情节概述"></a>情节概述</h2><p>这部电影笔者已经观看了数遍，每次观看都会有不同的感受。<br>这部影片讲述了一个受冤被陷害杀了自己妻子和情夫而入狱的安迪，通过十九年坚持与智慧成功越狱，重获自由的故事，并讲述了两位主角在肖申克监狱中互相帮助的深厚友情。</p><h2 id="人生哲理"><a href="#人生哲理" class="headerlink" title="人生哲理"></a>人生哲理</h2><p>Hope is a good thing, maybe the best of things, and no good thing ever dies.</p><h2 id="观影感悟"><a href="#观影感悟" class="headerlink" title="观影感悟"></a>观影感悟</h2><p>万物之中，希望至美，至美之物，永不凋零。</p><h2 id="现实视角"><a href="#现实视角" class="headerlink" title="现实视角"></a>现实视角</h2><p>现实是残酷的，但只要心怀希望，就一定可以抵达远方。</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活与感悟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GEE遥感影像监督分类</title>
      <link href="/archives/1abb07a6.html"/>
      <url>/archives/1abb07a6.html</url>
      
        <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><h2 id="写本文的初衷"><a href="#写本文的初衷" class="headerlink" title="写本文的初衷"></a>写本文的初衷</h2><p>美好的四月已经结束，五月在悄悄拉开帷幕，夏季承载着毕业生的所有期望悄悄展露头脚，毕业设计将成为她最美的画卷。前几天看到一位师妹做毕设时，用线下软件处理数据时的万般无奈与纠结，对于这种线下下载式的遥感处理方法，在GEE（Google Earth Engine, 谷歌地球引擎）出现之后便以逐步被很多科研工作者所弃用抑或是被淘汰，也许是这种云端处理模式之于遥感大数据而言，就本该是绝配。大数据时代的到来，也预示着这种线下处理模式的凋零，5G与互联网技术的进步正使得遥感数据云端处理成为可能。</p><h2 id="解决了什么问题"><a href="#解决了什么问题" class="headerlink" title="解决了什么问题"></a>解决了什么问题</h2><p>本文是一个技术博客，主要解决某线下处理软件不中用的问题。这种依赖于个人电脑配置以及付费软件版本功能的遥感大数据处理方式，本就应该逐步被云端处理所替代。当然，在此声明，并非针对某E姓软件，此软件在线下处理遥感数据的能力至今无软件可以匹敌，主要还是由于其对遥感数据具有强大的解析能力，但很无奈随着软件的升级，并非所有电脑都可以适配，因此云端处理数据就显得尤为重要。</p><h2 id="GEE的优势"><a href="#GEE的优势" class="headerlink" title="GEE的优势"></a>GEE的优势</h2><p>GEE（Google Earth Engine），第一次听到这个美好的名字时还是在读大二，记得那时候有一位不近学长强烈推荐使用GEE进行数据处理。然而当时年少轻狂，不知学长的苦心。坚持用某种E姓线下处理软件处理遥感大数据，要知道一景高分辨率遥感数据的数据量就高达1个G，是不是还有好几个G的，当时的电脑配置处理速度一个上午也处理不了几景。之后听说该软件加入了批处理功能，只要在刚开始设置好处理流程和相应的参数，就能一键三连，甚至一键好多连。但是，软件设计者却没有考虑到，一旦进入了这种批处理模式，电脑不能多线程工作，依然需要等一上午，才能把流程走完，才能处理之后的数据。不得不说这是一种巨大的进步呀！解放了人的双手，本就是科技革命的本质目的呢！</p><p>GEE具有如下优势：</p><p>（1）GEE可以实现远程云端处理，提供非常巨大的服务器，不需要担心个人电脑配置问题；</p><p>（2）GEE可以进行多线程处理遥感数据，可以同时开多个网页端，进行编程计算，效率大大提提升；</p><p>（3）GEE利用Javascript动态语言，灵活多变，且简单易学；</p><p>（4）GEE中集成了大量遥感数据处理模型与函数API，可以随时调用，不用自行编写；</p><p>（5）GEE还提供了Python接口，利用Python脚本就可以实现相应功能；</p><p>……</p><h1 id="数据源与预处理"><a href="#数据源与预处理" class="headerlink" title="数据源与预处理"></a>数据源与预处理</h1><h2 id="GEE-SR数据集介绍"><a href="#GEE-SR数据集介绍" class="headerlink" title="GEE SR数据集介绍"></a>GEE SR数据集介绍</h2><p>SR数据集是某些卫星传感器的大气校正表面反射率以及其他经过与处理之后的的卫星遥感数据的集合。这些图像包含可见光、近红外（VNIR）波段、短波红外（SWIR）波段被处理成正交的表面反射率，以及热红外（TIR）波段被处理成正交的亮度温度的数据。这些数据已经进行了大气校正，包括用CFMASK制作的云、影、水和雪掩码，以及每个像素的饱和掩码。收集的数据条被打包成重叠的 “场景”，使用标准化的参考网格，覆盖大约170公里x183公里。另见美国地质调查局关于SR质量保证带的网页。SR只能为处理到L1TP级别的Landsat资产制作。</p><p>——来自数据提供者</p><blockquote><p>参考:</p><p><a href="https://blog.csdn.net/qq_31988139/article/details/120402644">Google Earth Engine ——LANDSAT8_SR数据集</a></p></blockquote><h2 id="研究区域"><a href="#研究区域" class="headerlink" title="研究区域"></a>研究区域</h2><p>本文就选择青岛地区作为研究区进行数据处理。</p><p><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/GEE%E9%81%A5%E6%84%9F%E5%BD%B1%E5%83%8F%E7%9B%91%E7%9D%A3%E5%88%86%E7%B1%BB/S2Qingdao.png?download=true" alt="青岛地区Sentinel-2数据"></p><h2 id="哨兵-2号数据"><a href="#哨兵-2号数据" class="headerlink" title="哨兵-2号数据"></a>哨兵-2号数据</h2><p>哨兵-2号卫星，又名Sentinel-2，是欧空局于2017年发射，搭载高分辨率多光谱卫星传感器的光学遥感卫星。空间分辨率可达10米。主要用于土地利用，资源探测，自然灾害监测以及定量反演的一种资源卫星。哨兵2A与2B两颗由空中巴士国防航天等多个产业团队共同研发及制造，两架卫星的设计大致相同，且绕行同一太阳同步轨道，惟彼此所在的位置相距180度。</p><p>哨兵2号将可在多方面提供关于地球陆地地表与海岸区域变化的应用。该任务主要提供农业与森林管理相关影像资料，并可协助管理食品安全。卫星影像可用以测定多种植生指数，例如植物叶面积、叶绿素与含水量指数。这对地球上的植物量与农作物收获量推估特别重要。哨兵2号监测植物生长的同时，也可以在影像中表示地表覆盖物变迁与监测全世界森林。它也可提供湖泊与沿海污染状况影像。卫星还可拍摄洪水、火山爆发与山崩等天灾影像进行测绘，以协助人道救援。哨兵2号影像应用的例子如下：</p><ul><li>针对环境监测观察土地利用变化。</li><li>农业应用，例如作物监控与管理，协助粮食安全。</li><li>详细的植被与森林监测，与相关参数制作（例如叶面积指数、叶绿素含量、碳量估计）</li><li>观测沿海地区（海洋环境监测、沿海地区测绘）</li><li>内陆水域监测</li><li>冰川监测、海冰分布测绘、积雪监测</li><li>洪水区测绘与管理（风险分析、损害评估、洪水期间灾害管控）</li></ul><p>哨兵计画的卫星观测网提供了简单的方式监测与分析基于哨兵2号拍摄影像的地表变迁。</p><p>——维基百科</p><p>以下是其波段设计：</p><p><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/GEE%E9%81%A5%E6%84%9F%E5%BD%B1%E5%83%8F%E7%9B%91%E7%9D%A3%E5%88%86%E7%B1%BB/Sentinel-2Bands.png?download=true" alt="哨兵-2号波段设计（图源于维基百科）"></p><h1 id="方法原理"><a href="#方法原理" class="headerlink" title="方法原理"></a>方法原理</h1><h2 id="辐射校正"><a href="#辐射校正" class="headerlink" title="辐射校正"></a>辐射校正</h2><p>辐射校正包括辐射定标和大气校正，属于遥感数据预处理的内容。GEE中的SR数据集已经做了遥感数据预处理，所以在此只是利用FMASK进行云检测与去除即可（详见代码）。</p><h2 id="地理校正"><a href="#地理校正" class="headerlink" title="地理校正"></a>地理校正</h2><p>数据集已经做过几何校正与几何精校正。</p><h2 id="机器学习——随机森林算法模型"><a href="#机器学习——随机森林算法模型" class="headerlink" title="机器学习——随机森林算法模型"></a>机器学习——随机森林算法模型</h2><p>随机森林模型可以理解为一种用多个决策树组成的随机数的投票机制进行模式识别的过程，属于机器学习中监督学习的一种。</p><h2 id="其他模型"><a href="#其他模型" class="headerlink" title="其他模型"></a>其他模型</h2><p>SVM（支持向量机）</p><p>决策树……</p><h1 id="GEE中的分类器与分类方法详解（代码与分析方法）"><a href="#GEE中的分类器与分类方法详解（代码与分析方法）" class="headerlink" title="GEE中的分类器与分类方法详解（代码与分析方法）"></a>GEE中的分类器与分类方法详解（代码与分析方法）</h1><h2 id="JavaScript基础"><a href="#JavaScript基础" class="headerlink" title="JavaScript基础"></a>JavaScript基础</h2><h2 id="代码与方法详解"><a href="#代码与方法详解" class="headerlink" title="代码与方法详解"></a>代码与方法详解</h2><p>样本选取（分类依据）：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> water = <span class="comment">/* color: #1238d6 */</span>ee.<span class="title class_">FeatureCollection</span>(</span><br><span class="line">        [ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.20902134280091</span>, <span class="number">36.366615266547605</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">1</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;0&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.22859073977357</span>, <span class="number">36.423268311469755</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">1</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.22691705516193</span>, <span class="number">36.36163695583249</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">1</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;2&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.42535760691975</span>, <span class="number">36.46276088800295</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">1</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;3&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">119.93889828164347</span>, <span class="number">36.008296081362744</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">1</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;4&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.01065273720988</span>, <span class="number">36.01440578843647</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">1</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;5&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.04635830361613</span>, <span class="number">36.01176756392882</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">1</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;6&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.43683930490783</span>, <span class="number">36.95302971145465</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">1</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;7&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.44782563303283</span>, <span class="number">36.94424971643165</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">1</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;8&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.14089509104065</span>, <span class="number">36.86188806223697</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">1</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;9&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.23496552561096</span>, <span class="number">36.96674642762685</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">1</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;10&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">119.76976179656316</span>, <span class="number">35.76148094110215</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">1</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;11&quot;</span></span><br><span class="line">            &#125;)]),</span><br><span class="line">    forest = <span class="comment">/* color: #0c6c0d */</span>ee.<span class="title class_">FeatureCollection</span>(</span><br><span class="line">        [ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">119.94339981050962</span>, <span class="number">35.81958333441058</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">2</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;0&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">119.94558849306577</span>, <span class="number">35.82010313531279</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">2</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">119.82961706577312</span>, <span class="number">35.87820141012196</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">2</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;2&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">119.82956878601085</span>, <span class="number">35.878805584997174</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">2</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;3&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.0430490811918</span>, <span class="number">35.987221588668284</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">2</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;4&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.03816209636666</span>, <span class="number">35.98757317717099</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">2</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;5&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.04118066355771</span>, <span class="number">36.97603292697505</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">2</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;6&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.03922801539487</span>, <span class="number">36.97607149704851</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">2</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;7&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">119.99538412831197</span>, <span class="number">35.78700580416246</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">2</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;8&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">119.99416640541921</span>, <span class="number">35.78794574354011</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">2</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;9&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.60185426463654</span>, <span class="number">36.199152594317674</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">2</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;10&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.60916060199311</span>, <span class="number">36.198719701190235</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">2</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;11&quot;</span></span><br><span class="line">            &#125;)]),</span><br><span class="line">    city = <span class="comment">/* color: #d2b762 */</span>ee.<span class="title class_">FeatureCollection</span>(</span><br><span class="line">        [ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.41650156503648</span>, <span class="number">36.129044116121754</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">3</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;0&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.41429142480821</span>, <span class="number">36.129650704761204</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">3</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.41075090890855</span>, <span class="number">36.13015330322532</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">3</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;2&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.40731768136949</span>, <span class="number">36.13140111998</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">3</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;3&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.40678123956651</span>, <span class="number">36.13245828253948</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">3</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;4&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.40596584802599</span>, <span class="number">36.13261425613783</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">3</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;5&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.41094402795763</span>, <span class="number">36.13259692575331</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">3</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;6&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.43519119745226</span>, <span class="number">36.134035334643784</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">3</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;7&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.3765044642064</span>, <span class="number">36.13712869094811</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">3</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;8&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.36266426568956</span>, <span class="number">36.136175568950556</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">3</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;9&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.41381935602159</span>, <span class="number">36.13368006742981</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">3</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;10&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.42368131510972</span>, <span class="number">36.36322623928067</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">3</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;11&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.42664247386216</span>, <span class="number">36.36450489817577</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">3</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;12&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.42889552943467</span>, <span class="number">36.36379645462681</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">3</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;13&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.43430286280869</span>, <span class="number">36.360668858459796</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">3</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;14&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.1530537247987</span>, <span class="number">36.000872283292146</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">3</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;15&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.1313628962036</span>, <span class="number">35.99522397160657</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">3</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;16&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.00107276402414</span>, <span class="number">35.86535928375581</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">3</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;17&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.00620559321929</span>, <span class="number">36.7583440992046</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">3</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;18&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">119.95093062984039</span>, <span class="number">36.77374584237985</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">3</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;19&quot;</span></span><br><span class="line">            &#125;)]),</span><br><span class="line">    cropland = <span class="comment">/* color: #20ff0b */</span>ee.<span class="title class_">FeatureCollection</span>(</span><br><span class="line">        [ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.11102335818197</span>, <span class="number">36.619067818509706</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">4</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;0&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.13436930544759</span>, <span class="number">36.62733409634618</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">4</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">119.81873343673892</span>, <span class="number">36.69381851197602</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">4</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;2&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">119.86147711960025</span>, <span class="number">36.688174860750884</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">4</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;3&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.33817687859451</span>, <span class="number">36.58809087721563</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">4</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;4&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.3939523804311</span>, <span class="number">36.61929112620923</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">4</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;5&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.41438008428852</span>, <span class="number">36.620737784630805</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">4</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;6&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.46562100530903</span>, <span class="number">36.60454744022903</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">4</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;7&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">119.76090298257323</span>, <span class="number">36.09103938085209</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">4</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;8&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">119.7595296915576</span>, <span class="number">36.08656564731201</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">4</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;9&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">119.78566513619872</span>, <span class="number">36.099257902091296</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">4</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;10&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">119.65844860243544</span>, <span class="number">35.70823232349895</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">4</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;11&quot;</span></span><br><span class="line">            &#125;)]),</span><br><span class="line">    grassland = <span class="comment">/* color: #abff46 */</span>ee.<span class="title class_">FeatureCollection</span>(</span><br><span class="line">        [ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">119.98312553510928</span>, <span class="number">36.764253556519925</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">5</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;0&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">119.96921023474002</span>, <span class="number">36.764562973144855</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">5</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">119.96060296055511</span>, <span class="number">36.76853351705692</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">5</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;2&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">119.9530015802069</span>, <span class="number">36.768331547359665</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">5</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;3&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">119.99397598302684</span>, <span class="number">36.77292546571223</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">5</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;4&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">119.99547571008006</span>, <span class="number">36.772754148239926</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">5</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;5&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.40651565455876</span>, <span class="number">36.33991890340855</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">5</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;6&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.4503965940424</span>, <span class="number">36.33621129204126</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">5</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;7&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.54005730875981</span>, <span class="number">36.354946496140364</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">5</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;8&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.52396457788124</span>, <span class="number">36.35739759356269</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">5</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;9&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">120.39922041742305</span>, <span class="number">36.18777775513172</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">5</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;10&quot;</span></span><br><span class="line">            &#125;),</span><br><span class="line">        ee.<span class="title class_">Feature</span>(</span><br><span class="line">            ee.<span class="property">Geometry</span>.<span class="title class_">Point</span>([<span class="number">119.93996242142477</span>, <span class="number">35.882724414600965</span>]),</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;landcover&quot;</span>: <span class="number">5</span>,</span><br><span class="line">              <span class="string">&quot;system:index&quot;</span>: <span class="string">&quot;11&quot;</span></span><br><span class="line">            &#125;)]);</span><br></pre></td></tr></table></figure><p>算法详解：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//选择需要裁剪的矢量数据 </span></span><br><span class="line"><span class="keyword">var</span> aoi = ee.<span class="title class_">FeatureCollection</span>(<span class="string">&quot;users/guojiaxiang0820/Qingdao&quot;</span>);</span><br><span class="line"><span class="comment">//加载矢量边框，以便于在边界内选取样本点</span></span><br><span class="line"><span class="keyword">var</span> empty = ee.<span class="title class_">Image</span>().<span class="title function_">toByte</span>();</span><br><span class="line"><span class="keyword">var</span> outline = empty.<span class="title function_">paint</span>(&#123;</span><br><span class="line"> <span class="attr">featureCollection</span>:aoi, <span class="comment">// 行政边界命名为fc</span></span><br><span class="line"> <span class="attr">color</span>:<span class="number">0</span>, <span class="comment">//颜色透明</span></span><br><span class="line"> <span class="attr">width</span>:<span class="number">3</span> <span class="comment">//边界宽度</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="title class_">Map</span>.<span class="title function_">addLayer</span>(outline, &#123;<span class="attr">palette</span>: <span class="string">&quot;ff0000&quot;</span>&#125;, <span class="string">&quot;outline&quot;</span>);</span><br><span class="line"><span class="comment">//Function to mask the clouds in Sentinel-2</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">maskS2clouds</span>(<span class="params">image</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> qa = image.<span class="title function_">select</span>(<span class="string">&#x27;QA60&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Bits 10 and 11 are clouds and cirrus, respectively.</span></span><br><span class="line">  <span class="keyword">var</span> cloudBitMask = <span class="number">1</span> &lt;&lt; <span class="number">10</span>;</span><br><span class="line">  <span class="keyword">var</span> cirrusBitMask = <span class="number">1</span> &lt;&lt; <span class="number">11</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Both flags should be set to zero, indicating clear conditions.</span></span><br><span class="line">  <span class="keyword">var</span> mask = qa.<span class="title function_">bitwiseAnd</span>(cloudBitMask).<span class="title function_">eq</span>(<span class="number">0</span>)</span><br><span class="line">      .<span class="title function_">and</span>(qa.<span class="title function_">bitwiseAnd</span>(cirrusBitMask).<span class="title function_">eq</span>(<span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> image.<span class="title function_">updateMask</span>(mask).<span class="title function_">divide</span>(<span class="number">10000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Build the Sentinel 2 collection, filtered by date, bounds and percentage of cloud cover </span></span><br><span class="line"><span class="keyword">var</span> dataset = ee.<span class="title class_">ImageCollection</span>(<span class="string">&#x27;COPERNICUS/S2_SR&#x27;</span>)</span><br><span class="line">                  .<span class="title function_">filterDate</span>(<span class="string">&#x27;2019-01-01&#x27;</span>,<span class="string">&#x27;2020-12-31&#x27;</span>)</span><br><span class="line">                  .<span class="title function_">filterBounds</span>(aoi)</span><br><span class="line">                  .<span class="title function_">filter</span>(ee.<span class="property">Filter</span>.<span class="title function_">lt</span>(<span class="string">&#x27;CLOUDY_PIXEL_PERCENTAGE&#x27;</span>,<span class="number">10</span>))</span><br><span class="line">                  .<span class="title function_">map</span>(maskS2clouds);</span><br><span class="line"><span class="title function_">print</span>(<span class="string">&quot;Sentinel 2 Image Collection&quot;</span>,dataset);</span><br><span class="line"><span class="keyword">var</span> dem = ee.<span class="title class_">Image</span>(<span class="string">&quot;NASA/NASADEM_HGT/001&quot;</span>) <span class="comment">//添加dem数据 </span></span><br><span class="line"><span class="comment">// Construct Classfication Dataset</span></span><br><span class="line"><span class="comment">// RS Index Cacluate(NDVI\NDWI\EVI\BSI)</span></span><br><span class="line"><span class="keyword">var</span> add_RS_index = <span class="keyword">function</span>(<span class="params">img</span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> ndvi = img.<span class="title function_">normalizedDifference</span>([<span class="string">&#x27;B8&#x27;</span>, <span class="string">&#x27;B4&#x27;</span>]).<span class="title function_">rename</span>(<span class="string">&#x27;NDVI&#x27;</span>).<span class="title function_">copyProperties</span>(img,[<span class="string">&#x27;system:time_start&#x27;</span>]);</span><br><span class="line">  <span class="keyword">var</span> ndwi = img.<span class="title function_">normalizedDifference</span>([<span class="string">&#x27;B3&#x27;</span>, <span class="string">&#x27;B8&#x27;</span>]).<span class="title function_">rename</span>(<span class="string">&#x27;NDWI&#x27;</span>).<span class="title function_">copyProperties</span>(img,[<span class="string">&#x27;system:time_start&#x27;</span>]);</span><br><span class="line">  <span class="keyword">var</span> evi = img.<span class="title function_">expression</span>(<span class="string">&#x27;2.5 * ((NIR - RED) / (NIR + 6 * RED - 7.5 * BLUE + 1))&#x27;</span>, </span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&#x27;NIR&#x27;</span>: img.<span class="title function_">select</span>(<span class="string">&#x27;B8&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;RED&#x27;</span>: img.<span class="title function_">select</span>(<span class="string">&#x27;B4&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;BLUE&#x27;</span>: img.<span class="title function_">select</span>(<span class="string">&#x27;B2&#x27;</span>)</span><br><span class="line">  &#125;).<span class="title function_">rename</span>(<span class="string">&#x27;EVI&#x27;</span>).<span class="title function_">copyProperties</span>(img,[<span class="string">&#x27;system:time_start&#x27;</span>]);</span><br><span class="line">  <span class="keyword">var</span> bsi = img.<span class="title function_">expression</span>(<span class="string">&#x27;((RED + SWIR1) - (NIR + BLUE)) / ((RED + SWIR1) + (NIR + BLUE)) &#x27;</span>, </span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&#x27;RED&#x27;</span>: img.<span class="title function_">select</span>(<span class="string">&#x27;B4&#x27;</span>), </span><br><span class="line">    <span class="string">&#x27;BLUE&#x27;</span>: img.<span class="title function_">select</span>(<span class="string">&#x27;B2&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;NIR&#x27;</span>: img.<span class="title function_">select</span>(<span class="string">&#x27;B8&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;SWIR1&#x27;</span>: img.<span class="title function_">select</span>(<span class="string">&#x27;B11&#x27;</span>),</span><br><span class="line"></span><br><span class="line">  &#125;).<span class="title function_">rename</span>(<span class="string">&#x27;BSI&#x27;</span>).<span class="title function_">copyProperties</span>(img,[<span class="string">&#x27;system:time_start&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> ibi = img.<span class="title function_">expression</span>(<span class="string">&#x27;(2 * SWIR1 / (SWIR1 + NIR) - (NIR / (NIR + RED) + GREEN / (GREEN + SWIR1))) / (2 * SWIR1 / (SWIR1 + NIR) + (NIR / (NIR + RED) + GREEN / (GREEN + SWIR1)))&#x27;</span>, &#123;</span><br><span class="line">    <span class="string">&#x27;SWIR1&#x27;</span>: img.<span class="title function_">select</span>(<span class="string">&#x27;B11&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;NIR&#x27;</span>: img.<span class="title function_">select</span>(<span class="string">&#x27;B8&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;RED&#x27;</span>: img.<span class="title function_">select</span>(<span class="string">&#x27;B4&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;GREEN&#x27;</span>: img.<span class="title function_">select</span>(<span class="string">&#x27;B3&#x27;</span>)</span><br><span class="line">  &#125;).<span class="title function_">rename</span>(<span class="string">&#x27;IBI&#x27;</span>).<span class="title function_">copyProperties</span>(img,[<span class="string">&#x27;system:time_start&#x27;</span>]);</span><br><span class="line">  <span class="keyword">return</span> img.<span class="title function_">addBands</span>([ndvi, ndwi, evi, bsi, ibi]);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> dataset = dataset.<span class="title function_">map</span>(add_RS_index); </span><br><span class="line"><span class="keyword">var</span> bands = [<span class="string">&#x27;B2&#x27;</span>,<span class="string">&#x27;B3&#x27;</span>,<span class="string">&#x27;B4&#x27;</span>,<span class="string">&#x27;B5&#x27;</span>,<span class="string">&#x27;B6&#x27;</span>,<span class="string">&#x27;B7&#x27;</span>,<span class="string">&#x27;B8&#x27;</span>,<span class="string">&#x27;B8A&#x27;</span>,<span class="string">&#x27;B11&#x27;</span>,<span class="string">&#x27;NDVI&#x27;</span>,<span class="string">&#x27;NDWI&#x27;</span>,<span class="string">&#x27;BSI&#x27;</span>];</span><br><span class="line"><span class="keyword">var</span> imgcol_median = dataset.<span class="title function_">select</span>(bands).<span class="title function_">median</span>(); <span class="comment">//获取日期范围内的像素中值，以以减小误差</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> aoi_dem = dem.<span class="title function_">select</span>(<span class="string">&#x27;elevation&#x27;</span>).<span class="title function_">clip</span>(aoi).<span class="title function_">rename</span>(<span class="string">&#x27;DEM&#x27;</span>);<span class="comment">//裁剪DEM</span></span><br><span class="line"><span class="keyword">var</span> construct_img = imgcol_median.<span class="title function_">addBands</span>(aoi_dem).<span class="title function_">clip</span>(aoi);</span><br><span class="line"><span class="comment">//分类样本</span></span><br><span class="line"><span class="keyword">var</span> train_points = cropland.<span class="title function_">merge</span>(grassland).<span class="title function_">merge</span>(city).<span class="title function_">merge</span>(forest).<span class="title function_">merge</span>(water);<span class="comment">//分类样本，可以加类 </span></span><br><span class="line"><span class="keyword">var</span> train_data= construct_img.<span class="title function_">sampleRegions</span>(&#123;</span><br><span class="line">  <span class="attr">collection</span>: train_points,</span><br><span class="line">  <span class="attr">properties</span>: [<span class="string">&#x27;landcover&#x27;</span>],</span><br><span class="line">  <span class="attr">scale</span>: <span class="number">10</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//精度评价</span></span><br><span class="line"><span class="keyword">var</span> withRandom = train_data.<span class="title function_">randomColumn</span>(<span class="string">&#x27;random&#x27;</span>);<span class="comment">//样本点随机的排列</span></span><br><span class="line"><span class="keyword">var</span> split = <span class="number">0.7</span>; </span><br><span class="line"><span class="keyword">var</span> trainingPartition = withRandom.<span class="title function_">filter</span>(ee.<span class="property">Filter</span>.<span class="title function_">lt</span>(<span class="string">&#x27;random&#x27;</span>, split));<span class="comment">//筛选70%的样本作为训练样本</span></span><br><span class="line"><span class="keyword">var</span> testingPartition = withRandom.<span class="title function_">filter</span>(ee.<span class="property">Filter</span>.<span class="title function_">gte</span>(<span class="string">&#x27;random&#x27;</span>, split));<span class="comment">//筛选30%的样本作为测试样本</span></span><br><span class="line"><span class="comment">//分类方法选择随机森林</span></span><br><span class="line"><span class="keyword">var</span> rf = ee.<span class="property">Classifier</span>.<span class="title function_">smileRandomForest</span>(&#123;</span><br><span class="line">  <span class="attr">numberOfTrees</span>: <span class="number">20</span>,  </span><br><span class="line">  <span class="attr">bagFraction</span>: <span class="number">0.8</span></span><br><span class="line">&#125;).<span class="title function_">train</span>(&#123;</span><br><span class="line">  <span class="attr">features</span>: train_data,</span><br><span class="line">  <span class="attr">classProperty</span>: <span class="string">&#x27;landcover&#x27;</span>,</span><br><span class="line">  <span class="comment">// inputProperties: inputbands</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//对哨兵数据进行随机森林分类</span></span><br><span class="line"><span class="keyword">var</span> img_classfication = construct_img.<span class="title function_">classify</span>(rf); </span><br><span class="line"><span class="comment">//运用测试样本分类，确定要进行函数运算的数据集以及函数</span></span><br><span class="line"><span class="keyword">var</span> test = testingPartition.<span class="title function_">classify</span>(rf);</span><br><span class="line"><span class="comment">//计算混淆矩阵</span></span><br><span class="line"><span class="keyword">var</span> confusionMatrix = test.<span class="title function_">errorMatrix</span>(<span class="string">&#x27;landcover&#x27;</span>, <span class="string">&#x27;classification&#x27;</span>);</span><br><span class="line"><span class="title function_">print</span>(<span class="string">&#x27;confusionMatrix&#x27;</span>,confusionMatrix);<span class="comment">//面板上显示混淆矩阵</span></span><br><span class="line"><span class="title function_">print</span>(<span class="string">&#x27;overall accuracy&#x27;</span>, confusionMatrix.<span class="title function_">accuracy</span>());<span class="comment">//面板上显示总体精度</span></span><br><span class="line"><span class="title function_">print</span>(<span class="string">&#x27;kappa accuracy&#x27;</span>, confusionMatrix.<span class="title function_">kappa</span>());<span class="comment">//面板上显示kappa值</span></span><br><span class="line"><span class="title class_">Map</span>.<span class="title function_">centerObject</span>(aoi)</span><br><span class="line"><span class="title class_">Map</span>.<span class="title function_">addLayer</span>(aoi);</span><br><span class="line"><span class="title class_">Map</span>.<span class="title function_">addLayer</span>(img_classfication.<span class="title function_">clip</span>(aoi), &#123;<span class="attr">min</span>: <span class="number">1</span>, <span class="attr">max</span>: <span class="number">4</span>, <span class="attr">palette</span>: [<span class="string">&#x27;orange&#x27;</span>, <span class="string">&#x27;blue&#x27;</span>, <span class="string">&#x27;green&#x27;</span>,<span class="string">&#x27;yellow&#x27;</span>]&#125;);</span><br><span class="line"><span class="keyword">var</span> class1=img_classfication.<span class="title function_">clip</span>(aoi)</span><br><span class="line"><span class="comment">//导出分类图</span></span><br><span class="line"><span class="title class_">Export</span>.<span class="property">image</span>.<span class="title function_">toDrive</span>(&#123;  </span><br><span class="line">       <span class="attr">image</span>: class1,  </span><br><span class="line">       <span class="attr">description</span>: <span class="string">&#x27;rfclass&#x27;</span>,  </span><br><span class="line">       <span class="attr">fileNamePrefix</span>: <span class="string">&#x27;rf&#x27;</span>,  <span class="comment">//文件命名</span></span><br><span class="line">       <span class="attr">folder</span>: <span class="string">&quot;class&quot;</span>,  <span class="comment">//保存的文件夹</span></span><br><span class="line">       <span class="attr">scale</span>: <span class="number">10</span>,  <span class="comment">//分辨率</span></span><br><span class="line">       <span class="attr">region</span>: aoi,  <span class="comment">//研究区</span></span><br><span class="line">       <span class="attr">maxPixels</span>: <span class="number">1e13</span>,  <span class="comment">//最大像元素，默认就好</span></span><br><span class="line">       <span class="attr">crs</span>: <span class="string">&quot;EPSG:4326&quot;</span>  <span class="comment">//设置投影</span></span><br><span class="line">   &#125;);  </span><br></pre></td></tr></table></figure><h1 id="结果分析"><a href="#结果分析" class="headerlink" title="结果分析"></a>结果分析</h1><h2 id="结果图展示"><a href="#结果图展示" class="headerlink" title="结果图展示"></a>结果图展示</h2><p><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/GEE%E9%81%A5%E6%84%9F%E5%BD%B1%E5%83%8F%E7%9B%91%E7%9D%A3%E5%88%86%E7%B1%BB/%E5%88%86%E7%B1%BB%E7%BB%93%E6%9E%9C.png?download=true" alt="随机森林分类结果"></p><h2 id="混淆矩阵"><a href="#混淆矩阵" class="headerlink" title="混淆矩阵"></a>混淆矩阵</h2><h2 id="KAPPA系数"><a href="#KAPPA系数" class="headerlink" title="KAPPA系数"></a>KAPPA系数</h2><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>遥感数据本身就不该局限于个人电脑配置软件处理能力，大数据就应当为科学研究，工程项目等服务全人类的事业作出贡献，而不是固步自封，费用昂贵，阻碍科技的进步与生活的无限可能。未来的世界应当是一个大数据时代，数据共享时代，科研与应用相结合的时代。科技的进步需要所有人的共同努力，科技本身不是为个人制造利益的，而是为大众服务。我们之所以努力地推动科技的进步，就是希望每个人都能活得更有尊严，这才应是科研者和技术人所应有的本心。</p>]]></content>
      
      
      <categories>
          
          <category> 遥感与大数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 遥感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python类中self的作用</title>
      <link href="/archives/fe82aeb3.html"/>
      <url>/archives/fe82aeb3.html</url>
      
        <content type="html"><![CDATA[<h2 id="self定义。"><a href="#self定义。" class="headerlink" title="self定义。"></a>self定义。</h2><p>要想理解self就首先要理解Python中的类，不信的话，先看看他的定义：self是对象的载体，可以理解为一个储存实例化对象属性的字典（dict），self储存属性，而没有动作执行，self总是指向调用时类的实例。（怎么样，还行吧！）</p><h2 id="什么是类。"><a href="#什么是类。" class="headerlink" title="什么是类。"></a>什么是类。</h2><p>类是创建实例的模板，而实例则是一个一个具体的对象，各个实例拥有的数据都相互独立、互不影响；方法是与实例绑定的函数，和普通的函数不同，方法可以直接访问实例的数据。也就是说方法（method）是类（class）中的函数（function）。</p><h2 id="self的通俗理解。"><a href="#self的通俗理解。" class="headerlink" title="self的通俗理解。"></a>self的通俗理解。</h2><p>self简言之就是把类（class）中定义的变量和方法（method）变成实例变量和实例方法，即把抽象的编程具体的：具体的学生，XXX（姓名）&#x3D;抽象的人。作为类的成员，使得成员间能互相调用（变量，方法），互相传递（变量，方法）。而不需要从外部调用数据（即变量）和方法（即函数），以实现数据的封装。</p><p>怎么样，self是不是很厉害呢？下面这篇文章写的很好，可以借鉴呢。</p><blockquote><p>参考文献：</p></blockquote><p><a href="https://zhuanlan.zhihu.com/p/356325860">Python中的self详细解析</a></p>]]></content>
      
      
      <categories>
          
          <category> 程序代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>权限问题的解决</title>
      <link href="/archives/f3ecd78a.html"/>
      <url>/archives/f3ecd78a.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>问题描述：</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">FATAL &#123;</span><br><span class="line">err: Error: Spawn failed</span><br><span class="line">at ChildProcess.&lt;anonymous&gt; (/Users/leo/Documents/Blog/LuoMuBlog/node_modules/hexo-util/lib/spawn.js:51:21)</span><br><span class="line">at ChildProcess.emit (events.js:315:20)</span><br><span class="line">at Process.ChildProcess._handle.onexit (internal/child_process.js:277:12) &#123;</span><br><span class="line">code: 128</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="MacOS系统本机Root权限问题"><a href="#MacOS系统本机Root权限问题" class="headerlink" title="MacOS系统本机Root权限问题"></a>MacOS系统本机Root权限问题</h2><h3 id="1、需要将自建博客的本地根目录（一般为Blog）文件夹赋予Root权限，参考Mac本机读写权限。"><a href="#1、需要将自建博客的本地根目录（一般为Blog）文件夹赋予Root权限，参考Mac本机读写权限。" class="headerlink" title="1、需要将自建博客的本地根目录（一般为Blog）文件夹赋予Root权限，参考Mac本机读写权限。"></a>1、需要将自建博客的本地根目录（一般为Blog）文件夹赋予Root权限，参考<a href="https://blog.csdn.net/qq_40657321/article/details/106528128">Mac本机读写权限</a>。</h3><h3 id="2、进入Mac终端，输入命令：sudo-su-给所有命令以Root权限，再执行其他开源依赖库的安装或者命令的执行。"><a href="#2、进入Mac终端，输入命令：sudo-su-给所有命令以Root权限，再执行其他开源依赖库的安装或者命令的执行。" class="headerlink" title="2、进入Mac终端，输入命令：sudo su, 给所有命令以Root权限，再执行其他开源依赖库的安装或者命令的执行。"></a>2、进入Mac终端，输入命令：sudo su, 给所有命令以Root权限，再执行其他开源依赖库的安装或者命令的执行。</h3><h2 id="GitHub部署权限问题"><a href="#GitHub部署权限问题" class="headerlink" title="GitHub部署权限问题"></a>GitHub部署权限问题</h2><h3 id="1、在更新Token令牌之后在部署博客到GitHub时可能会报错，一般而言都是权限问题。解决方法可以参考GitHub更新令牌后部署权限"><a href="#1、在更新Token令牌之后在部署博客到GitHub时可能会报错，一般而言都是权限问题。解决方法可以参考GitHub更新令牌后部署权限" class="headerlink" title="1、在更新Token令牌之后在部署博客到GitHub时可能会报错，一般而言都是权限问题。解决方法可以参考GitHub更新令牌后部署权限"></a>1、在更新Token令牌之后在部署博客到GitHub时可能会报错，一般而言都是权限问题。解决方法可以参考<a href="https://nokiasonic.github.io/2021/08/30/%E3%80%90Hexo%E3%80%91github%E5%BC%80%E5%90%AF%E4%BB%A4%E7%89%8C%E9%AA%8C%E8%AF%81%E5%90%8E%E6%97%A0%E6%B3%95%E6%9B%B4%E6%96%B0Blog%E7%9A%84%E9%97%AE%E9%A2%98/">GitHub更新令牌后部署权限</a></h3><h3 id="2、问题解决关键，多试几遍！"><a href="#2、问题解决关键，多试几遍！" class="headerlink" title="2、问题解决关键，多试几遍！"></a>2、问题解决关键，多试几遍！</h3>]]></content>
      
      
      <categories>
          
          <category> 解决方案 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题解决方案 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我为什么要自建博客网站</title>
      <link href="/archives/7576230f.html"/>
      <url>/archives/7576230f.html</url>
      
        <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><h3 id="写博客的初心是可以记录生活，学习与工作上值得记录的事情。"><a href="#写博客的初心是可以记录生活，学习与工作上值得记录的事情。" class="headerlink" title="写博客的初心是可以记录生活，学习与工作上值得记录的事情。"></a>写博客的初心是可以记录生活，学习与工作上值得记录的事情。</h3><h2 id="转折"><a href="#转折" class="headerlink" title="转折"></a>转折</h2><h3 id="然而在使用简书博客有时候会一些小崩溃，为了我的信息不丢失，我毅然决然选择了自建博客网站。"><a href="#然而在使用简书博客有时候会一些小崩溃，为了我的信息不丢失，我毅然决然选择了自建博客网站。" class="headerlink" title="然而在使用简书博客有时候会一些小崩溃，为了我的信息不丢失，我毅然决然选择了自建博客网站。"></a>然而在使用简书博客有时候会一些小崩溃，为了我的信息不丢失，我毅然决然选择了自建博客网站。</h3><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><h3 id="未完待续……"><a href="#未完待续……" class="headerlink" title="未完待续……"></a>未完待续……</h3><p><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/%E6%88%91%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E8%87%AA%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/timg.jpeg?download=true" alt="心好累～"></p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书与生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello Hexo--Hexo 初步运行指令</title>
      <link href="/archives/573e690a.html"/>
      <url>/archives/573e690a.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++编程基础</title>
      <link href="/archives/4360a9bd.html"/>
      <url>/archives/4360a9bd.html</url>
      
        <content type="html"><![CDATA[<h1 id="C-学习基础"><a href="#C-学习基础" class="headerlink" title="C++学习基础"></a>C++学习基础</h1><h2 id="C-学习计划"><a href="#C-学习计划" class="headerlink" title="C++学习计划"></a>C++学习计划</h2><p>（1）基础语法（复习）——初步了解，基础编程<br>（2）核心编程——面向对象<br>（3）提高编程——泛型编程，STL</p><h2 id="C-编程流程（Clion）"><a href="#C-编程流程（Clion）" class="headerlink" title="C++编程流程（Clion）"></a>C++编程流程（Clion）</h2><p>（1）创建项目<br>（2）创建文件<br>（3）编写代码<br>（4）运行程序</p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>作用：给一段指定的内存空间取名，以方便操作这段内存，管理内存空间<br>语法：数据类型 变量名 &#x3D; 初始值;<br><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/Cpp%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E5%8F%98%E9%87%8F%E4%B8%8E%E5%86%85%E5%AD%98%E5%9B%BE%E7%A4%BA.png?download=true" alt="变量与内存图示"></p><blockquote><p>注意：<br>1、C++关键字不能用做变量名标识符<br>常用的关键字如下：<br><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/Cpp%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/C%2B%2B%E5%85%B3%E9%94%AE%E5%AD%97.png?download=true" alt="C++关键字"><br>2、标识符是有字母、数字、下划线组成<br>3、标识符的第一个字符只能是字母或者下划线，不能是数字<br>4、标识符区分大小写<br><strong>建议：在给变量命名之时，最好能够见名知义</strong></p></blockquote><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p>常量的定义方式通常有两种：<br>1、#define 宏常量：#define 常量名 常量值<br>（注：#define定义的宏常量一般放在函数之外或者开头）<br>2、const修饰的变量：const 变量类型 变量名 &#x3D; 变量值<br>（注：变量分全局变量和局部变量……)</p><blockquote><p>示例代码：</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Created by Leo on 2022/4/8.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//常量的定义方式有</span></span><br><span class="line"><span class="comment">//1、define宏常量</span></span><br><span class="line"><span class="comment">//2、const修饰的变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//1、define宏常量，不能修改,一旦修改就会报错</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Day 24 <span class="comment">//定义一个常量，#define 常量名 常量值</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Week 7 <span class="comment">//定义一个常量，#define 常量名 常量值</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> Year 12 <span class="comment">//定义一个常量，#define 常量名 常量值</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//    2、const修饰的变量也被定义为常量</span></span><br><span class="line">    <span class="type">const</span> <span class="type">int</span> Month = <span class="number">30</span>; <span class="comment">//定义一个变量，数据类型 变量名 = 变量初始值</span></span><br><span class="line"><span class="comment">//    Month = 31;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*分别输出</span></span><br><span class="line"><span class="comment">     * 一天，</span></span><br><span class="line"><span class="comment">     * 一周，</span></span><br><span class="line"><span class="comment">     * 一年的时间*/</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;一天有&quot;</span> &lt;&lt; Day &lt;&lt; <span class="string">&quot;小时&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;一周有&quot;</span> &lt;&lt; Week &lt;&lt; <span class="string">&quot;天&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;一月有&quot;</span> &lt;&lt; Month &lt;&lt; <span class="string">&quot;天&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;一年有&quot;</span> &lt;&lt; Year &lt;&lt; <span class="string">&quot;月&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><blockquote><p><strong>作用：在给变量分配内存时 ，需要给其一个合理的内存空间</strong></p></blockquote><p>1、整形<br>int：整形；<br>short：短整形<br>long：长整形<br>long long：长长整形<br><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/Cpp%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/%E6%95%B4%E5%9E%8B%E6%89%80%E5%8D%A0%E7%94%A8%E7%9A%84%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4%E5%88%86%E9%85%8D.png?download=true" alt="整型所占用的内存空间分配"></p><blockquote><p>示例代码：</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Created by Leo on 2022/4/8.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//    1、短整型(值的范围为：-32768～32767)</span></span><br><span class="line">    <span class="type">short</span> num1 = <span class="number">32767</span>;</span><br><span class="line"><span class="comment">//    2、整型</span></span><br><span class="line">    <span class="type">int</span> num2 = <span class="number">32768</span>;</span><br><span class="line"><span class="comment">//    3、长整型</span></span><br><span class="line">    <span class="type">long</span> num3 = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//    4、长长整型；</span></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> num4 = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;输出的数据类型&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;num1 = &quot;</span> &lt;&lt; num1 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;num2 = &quot;</span> &lt;&lt; num2 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;num3 = &quot;</span> &lt;&lt; num3 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;num4 = &quot;</span> &lt;&lt; num4 &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、实型<br>（1）单精度：float<br>（2） 双精度：double<br>float 变量名 &#x3D; 变量值f;<br>double 变量名 &#x3D; 变量值;</p><blockquote><p>示例代码：</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Created by Leo on 2022/4/21.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    1、单精度</span></span><br><span class="line"><span class="comment">//    2、双精度</span></span><br><span class="line"><span class="comment">//    C++中默认输出的数字位数为6位有效数字</span></span><br><span class="line">    <span class="type">float</span> f1 = <span class="number">3.1415966f</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;f1 = &quot;</span> &lt;&lt; f1 &lt;&lt; endl; <span class="comment">//占用4个字节</span></span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> d1 = <span class="number">3.1415966</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;d1 = &quot;</span> &lt;&lt; d1 &lt;&lt; endl; <span class="comment">//占用8个字节</span></span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;f1占用的内存空间为&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(f1) &lt;&lt; <span class="string">&quot;个字节&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;d1占用的内存空间为&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(d1) &lt;&lt; <span class="string">&quot;个字节&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    3、科学计数法</span></span><br><span class="line">    <span class="type">float</span> f2 = <span class="number">1e4</span>; <span class="comment">//10000</span></span><br><span class="line">    <span class="type">float</span> f3 = <span class="number">1e-4</span>; <span class="comment">//0.0001</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;f2 = &quot;</span> &lt;&lt; f2 &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;f3 = &quot;</span> &lt;&lt; f3 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、字符型<br>作用：字符型变量用于显示单个字符<br>语法：char 变量名 &#x3D; ‘变量值’;</p><blockquote><p>代码实例：</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Created by Leo on 2022/4/21.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//1、字符型变量创建方式</span></span><br><span class="line">    <span class="type">char</span> ch = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;ch = &quot;</span> &lt;&lt; ch &lt;&lt; endl;</span><br><span class="line"><span class="comment">//2、字符型变量所占内存的大小</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;字符型变量所占内存大小为&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(ch) &lt;&lt; <span class="string">&quot;个字节&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//3、字符型变量常见的错误</span></span><br><span class="line"><span class="comment">//    char ch1 = &#x27;abc&#x27;; //字符型变量&#x27;&#x27;内不能存放多个字符，放一个字符</span></span><br><span class="line"><span class="comment">//    char ch1 = &quot;a&quot;; //字符型变量不能用双引号</span></span><br><span class="line"><span class="comment">//  a的ASCII码为97</span></span><br><span class="line"><span class="comment">//  A的ASCII码为65</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;所对应的ASCII码数值为&quot;</span> &lt;&lt; (<span class="type">int</span>) ch &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 程序代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中国内陆Google搜索使用</title>
      <link href="/archives/266295d8.html"/>
      <url>/archives/266295d8.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>本文转发自 <a href="http://www.javanx.cn/20190318/google/">Web秀 作者：<a href="http://www.javanx.cn/author/1/">Javan</a> </a></p></blockquote><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>自2010年Google退出中国内陆后，搜索引擎百度一家独大，很多小伙伴也是很不甘心啊，毕竟百度和Google比，还是Google搜索更好用一些。</p><p>搜索内容准确，不会出现乱七八糟的广告，推广等。</p><p>先来看一波，对比：</p><p><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/%E4%B8%AD%E5%9B%BD%E5%86%85%E9%99%86Google%E6%90%9C%E7%B4%A2%E4%BD%BF%E7%94%A8/%E8%B0%B7%E6%AD%8C%E7%99%BE%E5%BA%A6%E5%AF%B9%E6%AF%94.png?download=true" alt="内陆也能使用Google了，如何能使用Google教程"></p><p><strong>推荐工具的前提是，希望大家都能借助工具学习有用的知识啊，作为一名程序猿，有时<a href="http://www.javanx.cn/tag/google%E6%90%9C%E7%B4%A2/">google搜索</a>带来的知识还是很客观的。希望大家用在正途。</strong></p><h1 id="谷歌访问助手使用"><a href="#谷歌访问助手使用" class="headerlink" title="谷歌访问助手使用"></a><a href="http://www.javanx.cn/tag/%E8%B0%B7%E6%AD%8C%E8%AE%BF%E9%97%AE%E5%8A%A9%E6%89%8B/">谷歌访问助手</a>使用</h1><h2 id="这里我们需要安装一个Chrome扩展插件——谷歌访问助手"><a href="#这里我们需要安装一个Chrome扩展插件——谷歌访问助手" class="headerlink" title="这里我们需要安装一个Chrome扩展插件——谷歌访问助手"></a>这里我们需要安装一个Chrome扩展插件——<a href="http://www.javanx.cn/wp-content/themes/lensnews2.2/images/google.rar">谷歌访问助手</a></h2><p><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/%E4%B8%AD%E5%9B%BD%E5%86%85%E9%99%86Google%E6%90%9C%E7%B4%A2%E4%BD%BF%E7%94%A8/%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85.png?download=true" alt="内陆也能使用Google了，如何能使用Google教程"></p><h2 id="打开Chrome浏览器，设置-——-更多工具-——-扩展程序。"><a href="#打开Chrome浏览器，设置-——-更多工具-——-扩展程序。" class="headerlink" title="打开Chrome浏览器，设置 —— 更多工具 —— 扩展程序。"></a>打开Chrome浏览器，设置 —— 更多工具 —— 扩展程序。</h2><h2 id="将已经下载并解压的-谷歌访问助手-v2-3-0-crx文件拖动到Google扩展程序界面，或者点击“加载已解压的扩展程序”，选择文件。"><a href="#将已经下载并解压的-谷歌访问助手-v2-3-0-crx文件拖动到Google扩展程序界面，或者点击“加载已解压的扩展程序”，选择文件。" class="headerlink" title="将已经下载并解压的 谷歌访问助手_v2.3.0.crx文件拖动到Google扩展程序界面，或者点击“加载已解压的扩展程序”，选择文件。"></a>将已经下载并解压的 谷歌访问助手_v2.3.0.crx文件拖动到Google扩展程序界面，或者点击“加载已解压的扩展程序”，选择文件。</h2><p><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/%E4%B8%AD%E5%9B%BD%E5%86%85%E9%99%86Google%E6%90%9C%E7%B4%A2%E4%BD%BF%E7%94%A8/%E4%B8%8B%E8%BD%BD%E8%A7%A3%E5%8E%8B.png?download=true" alt="内陆也能使用Google了，如何能使用Google教程"><br>这时候会弹框提示：</p><p><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/%E4%B8%AD%E5%9B%BD%E5%86%85%E9%99%86Google%E6%90%9C%E7%B4%A2%E4%BD%BF%E7%94%A8/%E6%B7%BB%E5%8A%A0%E6%8B%93%E5%B1%95%E7%A8%8B%E5%BA%8F.png?download=true" alt="内陆也能使用Google了，如何能使用Google教程"><br>完成安装后，用户有12个小时的免费试用时间。如何永久免费使用了？</p><p>其实也很简单，只需要将<code>123.hao245.com</code>设置成主页就可以了。</p><p>安装成功后，浏览器右上角就有这个图标了，如果发现不能使用，可以重启它。</p><p><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/%E4%B8%AD%E5%9B%BD%E5%86%85%E9%99%86Google%E6%90%9C%E7%B4%A2%E4%BD%BF%E7%94%A8/%E8%B0%B7%E6%AD%8C%E8%AE%BF%E9%97%AE%E5%8A%A9%E6%89%8B.png?download=true" alt="内陆也能使用Google了，如何能使用Google教程"></p><h2 id="谷歌访问助手常见问题"><a href="#谷歌访问助手常见问题" class="headerlink" title="谷歌访问助手常见问题"></a>谷歌访问助手常见问题</h2><p>(1)设置首页成功，但是重启浏览器还是显示没有激活，一般是因为关闭浏览器并没有真正退出浏览器。chrome浏览器的退出方法是点击选项-&gt;退出彻底关闭浏览器。也可以尝试在任务管理器中结束浏览器的所有进程。</p><p>(2)如果设置首页不成功或者不会设置首页的，可以设置自动打开首页。点左图上的设置图标，勾选自动打开首页，任意勾选一个主页，在重启浏览器器（务必重启浏览器）。</p><p>(3)谷歌访问助手软件安装成功后，用户有12个小时的免费试用时间。</p><p>(4)有用户反应，谷歌访问助手在使用的过程中会突然无法使用，或者说前几天谷歌访问助手还挺好用的，突然就不好用了。出现这个问题是原因可能是浏览器的默认首页被更改了，因为我都知道谷歌访问助手由于考虑自身的经营问题强制要求用户必须使用好123导航作为首页。所以如果你的谷歌访问助手之前是可以使用后来突然不能正常使用了，那么首先请考率你是不是修改了默认主页。</p><h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><p><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/%E4%B8%AD%E5%9B%BD%E5%86%85%E9%99%86Google%E6%90%9C%E7%B4%A2%E4%BD%BF%E7%94%A8/%E9%A2%84%E8%A7%881.png?download=true" alt="内陆也能使用Google了，如何能使用Google教程"><br><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/%E4%B8%AD%E5%9B%BD%E5%86%85%E9%99%86Google%E6%90%9C%E7%B4%A2%E4%BD%BF%E7%94%A8/%E9%A2%84%E8%A7%882.png?download=true" alt="内陆也能使用Google了，如何能使用Google教程"></p><h2 id="YOUTUBE访问指南"><a href="#YOUTUBE访问指南" class="headerlink" title="YOUTUBE访问指南"></a>YOUTUBE访问指南</h2><p><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/%E4%B8%AD%E5%9B%BD%E5%86%85%E9%99%86Google%E6%90%9C%E7%B4%A2%E4%BD%BF%E7%94%A8/YouTube.png?download=true" alt="YOUTUBE访问指南"></p><p>当前你google访问助手安装成功后，访问<a href="https://chrome.google.com/webstore/category/extensions?hl=zh">google插件市场</a></p><h2 id="谷歌网上应用商店"><a href="#谷歌网上应用商店" class="headerlink" title="谷歌网上应用商店"></a>谷歌网上应用商店</h2><p><img src="https://guojx0820.coding.net/p/guojx0820/d/ImgHost/git/raw/master/%E4%B8%AD%E5%9B%BD%E5%86%85%E9%99%86Google%E6%90%9C%E7%B4%A2%E4%BD%BF%E7%94%A8/%E7%BD%91%E4%B8%8A%E5%BA%94%E7%94%A8%E5%95%86%E5%BA%97.png?download=true" alt="Google网上应用商店"></p>]]></content>
      
      
      <categories>
          
          <category> 解决方案 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络与浏览器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何搭建自己的个人博客网站</title>
      <link href="/archives/23cd4859.html"/>
      <url>/archives/23cd4859.html</url>
      
        <content type="html"><![CDATA[<h2 id="下载并安装git-nodeJS框架"><a href="#下载并安装git-nodeJS框架" class="headerlink" title="下载并安装git nodeJS框架"></a>下载并安装git nodeJS框架</h2><h2 id="打开终端，进入root模式，命令行：sudo-su"><a href="#打开终端，进入root模式，命令行：sudo-su" class="headerlink" title="打开终端，进入root模式，命令行：sudo su"></a>打开终端，进入root模式，命令行：sudo su</h2><h3 id="输入密码回车"><a href="#输入密码回车" class="headerlink" title="输入密码回车"></a>输入密码回车</h3><h2 id="利用npm安装包管理器cnpm达到提速的目的，命令行：npm-install-g-cnpm-–registry-x3D-https-registry-npm-taobao-org"><a href="#利用npm安装包管理器cnpm达到提速的目的，命令行：npm-install-g-cnpm-–registry-x3D-https-registry-npm-taobao-org" class="headerlink" title="利用npm安装包管理器cnpm达到提速的目的，命令行：npm install -g cnpm –registry&#x3D;https://registry.npm.taobao.org"></a>利用npm安装包管理器cnpm达到提速的目的，命令行：npm install -g cnpm –registry&#x3D;<a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a></h2><h2 id="利用cnpm安装hexo，命令行：cnpm-install-g-hexo-cli"><a href="#利用cnpm安装hexo，命令行：cnpm-install-g-hexo-cli" class="headerlink" title="利用cnpm安装hexo，命令行：cnpm install -g hexo-cli"></a>利用cnpm安装hexo，命令行：cnpm install -g hexo-cli</h2><h2 id="新建空文件夹，命令行：mkdir-blog"><a href="#新建空文件夹，命令行：mkdir-blog" class="headerlink" title="新建空文件夹，命令行：mkdir blog"></a>新建空文件夹，命令行：mkdir blog</h2><h2 id="进入博客，命令行：cd-blog"><a href="#进入博客，命令行：cd-blog" class="headerlink" title="进入博客，命令行：cd blog"></a>进入博客，命令行：cd blog</h2><h2 id="利用hexo初始化一个博客，命令行：sudo-hexo-init"><a href="#利用hexo初始化一个博客，命令行：sudo-hexo-init" class="headerlink" title="利用hexo初始化一个博客，命令行：sudo hexo init"></a>利用hexo初始化一个博客，命令行：sudo hexo init</h2><h2 id="本地启动，命令行：hexo-s"><a href="#本地启动，命令行：hexo-s" class="headerlink" title="本地启动，命令行：hexo s"></a>本地启动，命令行：hexo s</h2><h3 id="浏览器：localhost-4000端口打开"><a href="#浏览器：localhost-4000端口打开" class="headerlink" title="浏览器：localhost:4000端口打开"></a>浏览器：localhost:4000端口打开</h3><h2 id="新建一篇博客文章，命令行：hexo-n-“博客文章”"><a href="#新建一篇博客文章，命令行：hexo-n-“博客文章”" class="headerlink" title="新建一篇博客文章，命令行：hexo n “博客文章”"></a>新建一篇博客文章，命令行：hexo n “博客文章”</h2><h3 id="cd-到文件夹下，用vim打开，命令行：vim-博客文章-md"><a href="#cd-到文件夹下，用vim打开，命令行：vim-博客文章-md" class="headerlink" title="cd 到文件夹下，用vim打开，命令行：vim 博客文章.md"></a>cd 到文件夹下，用vim打开，命令行：vim 博客文章.md</h3><h2 id="保存退出，命令行：esc-wq或者Ctl-C"><a href="#保存退出，命令行：esc-wq或者Ctl-C" class="headerlink" title="保存退出，命令行：esc :wq或者Ctl+C"></a>保存退出，命令行：esc :wq或者Ctl+C</h2><h3 id="cd到根目录-x2F-blog下"><a href="#cd到根目录-x2F-blog下" class="headerlink" title="cd到根目录&#x2F;blog下"></a>cd到根目录&#x2F;blog下</h3><h2 id="hexo-clean清除一下目录"><a href="#hexo-clean清除一下目录" class="headerlink" title="hexo clean清除一下目录"></a>hexo clean清除一下目录</h2><h2 id="hexo-g或者hexo-generate，更新"><a href="#hexo-g或者hexo-generate，更新" class="headerlink" title="hexo g或者hexo generate，更新"></a>hexo g或者hexo generate，更新</h2><h2 id="hexo-s或者hexo-server，部署到本地服务器上"><a href="#hexo-s或者hexo-server，部署到本地服务器上" class="headerlink" title="hexo s或者hexo server，部署到本地服务器上"></a>hexo s或者hexo server，部署到本地服务器上</h2><h2 id="hexo-d或者hexo-deploy，部署到远端托管"><a href="#hexo-d或者hexo-deploy，部署到远端托管" class="headerlink" title="hexo d或者hexo deploy，部署到远端托管"></a>hexo d或者hexo deploy，部署到远端托管</h2><blockquote><p>持续更新中…</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
